{
    "docs": [
        {
            "location": "/",
            "text": "Getting started\n\u00b6\n\n\nWe are an open source project, and some of our internal dev terms may spill out to the external SDK - apologies for this. But think of the SDK you download as being the API to a set of really cool services that allow smart devices to pay for services from oneanother\n\n\nWhat you get from the SDK you download from our git repo, is access to the API in all the supported languages (we refer this as the 'wrapper'), you will still need to get the core IoT component from the releases (we refer to this as the 'RPC-agent'). \nIf you're interested further on the internal architectcure of the project check this out\n.\n\n\nGet the SDK (software development kit) from the Github repository\n\u00b6\n\n\nPlease either download the repo, or clone the repo from Github, \nthe github repo for Worldpay Within can be found here\n\n\nDownload the core Iot component\n\u00b6\n\n\nThe Iot core component is sometimes called the \"RPC-Agent\" (and sometimes referred to as the binaries) from the Github Repository\n\n\n\n\nGo to the releases page here \nhttps://github.com/WPTechInnovation/worldpay-within-sdk/releases\n\n\nDownload the zip file entitled 'wpwithin-<version_number>-bins.tar.gz' e.g. wpwithin-0.4-bins.tar.gz - make sure to get the latest one though!\n\n\nYou don't need all the files in this download! Oh no, you'll just need the ones for the computer that you are developing on, and thing (smart device) that you are going to run it on.\n\n\nUnzip the file rpc-agent-bins-<version_number>.tar.gz\n\n\nChoose the RPC-agent file appropriate to your Thing or development machine.\n\n\n\n\nSetup your environment Worldpay Within\n\u00b6\n\n\nYou'll need to drop the core IoT component (RPC-agent file) into the appropriate place in the SDK (or wrapper directory).\n\n\nFollow the instructions for each supported language on where to place the core IoT component (RPC-agent file) and what to call it. The instructions will also let you know if there are any other pre-requisites to install on your device before you get started.\n\n\nJava\n\n\n.NET\n\n\nGo\n\n\nGo\n\n\nNode.js\n\n\nPython (2.7)",
            "title": "Getting started"
        },
        {
            "location": "/#getting-started",
            "text": "We are an open source project, and some of our internal dev terms may spill out to the external SDK - apologies for this. But think of the SDK you download as being the API to a set of really cool services that allow smart devices to pay for services from oneanother  What you get from the SDK you download from our git repo, is access to the API in all the supported languages (we refer this as the 'wrapper'), you will still need to get the core IoT component from the releases (we refer to this as the 'RPC-agent').  If you're interested further on the internal architectcure of the project check this out .",
            "title": "Getting started"
        },
        {
            "location": "/#get-the-sdk-software-development-kit-from-the-github-repository",
            "text": "Please either download the repo, or clone the repo from Github,  the github repo for Worldpay Within can be found here",
            "title": "Get the SDK (software development kit) from the Github repository"
        },
        {
            "location": "/#download-the-core-iot-component",
            "text": "The Iot core component is sometimes called the \"RPC-Agent\" (and sometimes referred to as the binaries) from the Github Repository   Go to the releases page here  https://github.com/WPTechInnovation/worldpay-within-sdk/releases  Download the zip file entitled 'wpwithin-<version_number>-bins.tar.gz' e.g. wpwithin-0.4-bins.tar.gz - make sure to get the latest one though!  You don't need all the files in this download! Oh no, you'll just need the ones for the computer that you are developing on, and thing (smart device) that you are going to run it on.  Unzip the file rpc-agent-bins-<version_number>.tar.gz  Choose the RPC-agent file appropriate to your Thing or development machine.",
            "title": "Download the core Iot component"
        },
        {
            "location": "/#setup-your-environment-worldpay-within",
            "text": "You'll need to drop the core IoT component (RPC-agent file) into the appropriate place in the SDK (or wrapper directory).  Follow the instructions for each supported language on where to place the core IoT component (RPC-agent file) and what to call it. The instructions will also let you know if there are any other pre-requisites to install on your device before you get started.  Java  .NET  Go  Go  Node.js  Python (2.7)",
            "title": "Setup your environment Worldpay Within"
        },
        {
            "location": "/the-flows/",
            "text": "There are certain flows that are allowable for the consumer and producer, and this flow should be adhered to when utilising the Worldpay Within SDK. What follows is a diagram of the flow, and then a detailed breakdown of the steps of the flows, what they do; and explicitly the order in which they should be followed.\n\n\nThe devices are not synchronised by the SDK in any way - so it is up to the developer of the app that sits on top of the SDK to call the Worldpay Within API in the correct order. This is the responsibility of the developer. However if the order below is adhered to then the outcome of the functionality will be as desired.\n\n\nThe Flows diagram\n\u00b6\n\n\n\n    \n\n    \nThe flows of the producer and consumer.\n\n\n\n\n\nThe Consumer flow\n\u00b6\n\n\n\n\nNote\n\n\nThis is the flow of the consumer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.\n\n\n\n\n\n\n\n\n\n\nStep in Flow\n\n\nWhat it does\n\n\n\n\n\n\n\n\n\n\n1. SETUP\n\n\nSetups up the device\n\n\n\n\n\n\n2. DEVICE DISCOVERY\n\n\nDiscover devices that are broadcasting messages\n\n\n\n\n\n\n3. (CHOOSE MESSAGE)\n\n\nChoose the message, then use that information in the following steps\n\n\n\n\n\n\n4. INIT CONSUMER\n\n\nInitialises the device as a consumer\n\n\n\n\n\n\n5. REQUEST SERVICES\n\n\nRequest service messages from the device that is broadcasting, which lists what services it's offering\n\n\n\n\n\n\n6. GET SERVICE PRICES\n\n\nGet's the prices for the service you are interested in\n\n\n\n\n\n\n7. SELECT SERVICE\n\n\nSelects the service the device wants to consume\n\n\n\n\n\n\n8. MAKE PAYMENT\n\n\nMakes a payment for the service that is chosen\n\n\n\n\n\n\n9. BEGIN SERVICE DELIVERY\n\n\nStarts the process / flow to consume the service based on the service token received\n\n\n\n\n\n\n10. STOP SERVICE DELIVERY\n\n\nCalled to tell the other thing that it has completed it's consumption of the service\n\n\n\n\n\n\n\n\nThe Producer flow\n\u00b6\n\n\n\n\nNote\n\n\nThis is the flow of the producer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.\n\n\n\n\n\n\n\n\n\n\nStep in Flow\n\n\nWhat it does\n\n\n\n\n\n\n\n\n\n\n1. SETUP\n\n\nSetups the device\n\n\n\n\n\n\n2A. ADD SERVICE\n\n\nAdds a service to the producer\n\n\n\n\n\n\n2B. REMOVE SERVICE\n\n\nRemvoves a service from the producer\n\n\n\n\n\n\n3. INIT PRODUCER\n\n\nInitialises the producer\n\n\n\n\n\n\n4A. START BROADCAST\n\n\nStarts the producer broadcasting it's service message\n\n\n\n\n\n\n4B. STOP BROADCAST\n\n\nStops the producer from broadcasting it's service message\n\n\n\n\n\n\n\n\nAPI calls\n\u00b6\n\n\nThe steps in the flow neatly map to the api flows, here is some further information about what they do:\n\n\n\n\n\n\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetup\n\n\nSets up the wrapper to be able to start communicating with the underlying SDK\n\n\n\n\n\n\naddService\n\n\nAdds a service of type WWSerive to the producer, used if the device you are operating on is a producer, if added to a device you intend as a consumer this will give that device producer functionality\n\n\n\n\n\n\nremoveService\n\n\nThis removes the service from the producer\n\n\n\n\n\n\ninitConsumer\n\n\nThis initiates the device as a consumer, which enables it to find services, negotiate prices, make payments and receive services\n\n\n\n\n\n\ninitProducer\n\n\nThis initiates the device as a producer / or initialises the devices producer capability\n\n\n\n\n\n\ngetDevice\n\n\nThis is able to provide back details of the the current device that the SDK is running on, and it credentials / information\n\n\n\n\n\n\nstartServiceBroadcast\n\n\nThis enables the producer device to start broadcasting itself via UDP broadcast over the network to notifiy devices it is available to be consumed\n\n\n\n\n\n\nstopServiceBroadcast\n\n\nThis method stops the SDK from broadcasting the current service messages that it is broadcasting\n\n\n\n\n\n\ndeviceDiscovery\n\n\nThis enables the consumer device to discovery other devices (producers) on the network that are UDP broadcasting\n\n\n\n\n\n\nrequestServices\n\n\nGet a list of services that are avaialble from the broadcasting device\n\n\n\n\n\n\ngetServicePrices\n\n\nThis is used by the consumer to get the list of prices associated with a particular serviceId\n\n\n\n\n\n\nselectService\n\n\nSelection of a service is performed by the consumer, providing details of the service, the amount and at what price point it wants to purchase the service\n\n\n\n\n\n\nmakePayment\n\n\nThis allows the consumer to request a payment be made at the producer device, by providing the total price response object as the request. The producer will then make the payment (or attempt to) and send back a Payment Response detailing whether it was successful or not\n\n\n\n\n\n\nbeginServiceDelivery\n\n\nThis begins the service delivery, and is requested by the consumer, and will proceed as long as the correct information is provided to the producer. If the correct credentials are passed through, then the producer will start releasing the service known as a 'trusted trigger'\n\n\n\n\n\n\nendServiceDelivery\n\n\nThis ends the service delivery, a request initiated by the consumer",
            "title": "The Flows"
        },
        {
            "location": "/the-flows/#the-flows-diagram",
            "text": "The flows of the producer and consumer.",
            "title": "The Flows diagram"
        },
        {
            "location": "/the-flows/#the-consumer-flow",
            "text": "Note  This is the flow of the consumer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.      Step in Flow  What it does      1. SETUP  Setups up the device    2. DEVICE DISCOVERY  Discover devices that are broadcasting messages    3. (CHOOSE MESSAGE)  Choose the message, then use that information in the following steps    4. INIT CONSUMER  Initialises the device as a consumer    5. REQUEST SERVICES  Request service messages from the device that is broadcasting, which lists what services it's offering    6. GET SERVICE PRICES  Get's the prices for the service you are interested in    7. SELECT SERVICE  Selects the service the device wants to consume    8. MAKE PAYMENT  Makes a payment for the service that is chosen    9. BEGIN SERVICE DELIVERY  Starts the process / flow to consume the service based on the service token received    10. STOP SERVICE DELIVERY  Called to tell the other thing that it has completed it's consumption of the service",
            "title": "The Consumer flow"
        },
        {
            "location": "/the-flows/#the-producer-flow",
            "text": "Note  This is the flow of the producer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.      Step in Flow  What it does      1. SETUP  Setups the device    2A. ADD SERVICE  Adds a service to the producer    2B. REMOVE SERVICE  Remvoves a service from the producer    3. INIT PRODUCER  Initialises the producer    4A. START BROADCAST  Starts the producer broadcasting it's service message    4B. STOP BROADCAST  Stops the producer from broadcasting it's service message",
            "title": "The Producer flow"
        },
        {
            "location": "/the-flows/#api-calls",
            "text": "The steps in the flow neatly map to the api flows, here is some further information about what they do:     Method  Description      setup  Sets up the wrapper to be able to start communicating with the underlying SDK    addService  Adds a service of type WWSerive to the producer, used if the device you are operating on is a producer, if added to a device you intend as a consumer this will give that device producer functionality    removeService  This removes the service from the producer    initConsumer  This initiates the device as a consumer, which enables it to find services, negotiate prices, make payments and receive services    initProducer  This initiates the device as a producer / or initialises the devices producer capability    getDevice  This is able to provide back details of the the current device that the SDK is running on, and it credentials / information    startServiceBroadcast  This enables the producer device to start broadcasting itself via UDP broadcast over the network to notifiy devices it is available to be consumed    stopServiceBroadcast  This method stops the SDK from broadcasting the current service messages that it is broadcasting    deviceDiscovery  This enables the consumer device to discovery other devices (producers) on the network that are UDP broadcasting    requestServices  Get a list of services that are avaialble from the broadcasting device    getServicePrices  This is used by the consumer to get the list of prices associated with a particular serviceId    selectService  Selection of a service is performed by the consumer, providing details of the service, the amount and at what price point it wants to purchase the service    makePayment  This allows the consumer to request a payment be made at the producer device, by providing the total price response object as the request. The producer will then make the payment (or attempt to) and send back a Payment Response detailing whether it was successful or not    beginServiceDelivery  This begins the service delivery, and is requested by the consumer, and will proceed as long as the correct information is provided to the producer. If the correct credentials are passed through, then the producer will start releasing the service known as a 'trusted trigger'    endServiceDelivery  This ends the service delivery, a request initiated by the consumer",
            "title": "API calls"
        },
        {
            "location": "/documentation/",
            "text": "Theme Documentation\n\u00b6\n\n\nBlockquotes\n\u00b6\n\n\n\n\nMorbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a.\n\n\n\n\nLists\n\u00b6\n\n\nUnordered lists\n\u00b6\n\n\n\n\nSed sagittis eleifend rutrum.\n\n\nDuis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n\n\n\n\n\n\nAliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex.\n\n\nNulla et rhoncus turpis. \n\n\n\n\nOrdered lists\n\u00b6\n\n\n\n\n\n\nInteger vehicula feugiat magna, a mollis tellus. \n\n\n\n\n\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus.\n\n\n\n\n\n\nVivamus venenatis porttitor tortor sit amet rutrum. \n\n\n\n\n\n\nMorbi eget dapibus felis. \n\n\n\n\n\n\nPellentesque eget \nvar\n \n_extends\n ornare tellus, ut gravida mi.\n\n\n\n\n\n\n\n\n\n\nVivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis.\n\n\n\n\n\n\nDefinition lists\n\u00b6\n\n\n\n\nLorem ipsum dolor sit amet\n\n\n\n\nSed sagittis eleifend rutrum. Donec vitae suscipit est.\n\n\n\n\nCras arcu libero\n\n\n\n\nAliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\nut eros sed sapien ullamcorper consequat. \n\n\n\n\n\n\nCode blocks\n\u00b6\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\nHorizontal line\n\u00b6\n\n\n\n\nData tables\n\u00b6\n\n\n\n\n\n\n\n\nSollicitudo / Pellentesi\n\n\nconsectetur\n\n\nadipiscing\n\n\n\n\n\n\n\n\n\n\nVivamus a pharetra\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nOrnare viverra ex\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nMauris a ullamcorper\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nNullam urna elit\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nMalesuada eget finibus\n\n\nyes\n\n\nyes\n\n\n\n\n\n\n\n\nNotes\n\u00b6\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nPhasellus posuere in sem ut cursus\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\n\n\n\nNunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.\n\n\n\n\n\n\nSummary\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nTip\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nSuccess\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nWarning\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nFailure\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nDanger\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nBug\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\n\n\nQuote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nCode Block\n\u00b6\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n#!/usr/bin/python\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n#!python hl_lines=\"3 4\"\n\n\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nFootnotes\n\u00b6\n\n\nLorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n\n\nJump to footnote at the bottom of the page\n\n\nMetadata\n\u00b6\n\n\nThe \nMetadata\n extension makes it possible to add metadata to a document\nwhich gives more control over the theme in a page-specific context.\n\n\nExample:\n\n\ntitle: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n## Permalinks\n\nPermalinks are a feature of the [Table of Contents][1] extension, which is part\nof the standard Markdown library. The extension inserts an anchor at the end of\neach headline, which makes it possible to directly link to a subpart of the\ndocument.\n\n  [1]: https://pythonhosted.org/Markdown/extensions/toc.html\n\n## Installation\n\nTo enable permalinks, add the following to your `mkdocs.yml`:\n\n``` yaml\nmarkdown_extensions:\n  - toc(permalink=true)\n\n\n\n\nThis will add a link containing the paragraph symbol \n\u00b6\n at the end of each\nheadline (exactly like on the page you're currently viewing), which the\nMaterial theme will make appear on hover. In order to change the text of the\npermalink, a string can be passed, e.g.:\n\n\nmarkdown_extensions:\n  - toc(permalink=Link)\n\n\n\n\nPyMdown Extensions\n\u00b6\n\n\nPyMdown Extensions\n is a collection of Markdown extensions that add some\ngreat features to the standard Markdown library. For this reason, the\n\ninstallation of this package is highly recommended\n as it's well-integrated\nwith the Material theme.\n\n\nInstallation\n\u00b6\n\n\nThe PyMdown Extensions package can be installed with the following command:\n\n\npip install pymdown-extensions\n\n\n\n\nThe following list of extensions that are part of the PyMdown Extensions\npackage are recommended to be used together with the Material theme:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \npymdownx.arithmatex\n\n  \n-\n \npymdownx.betterem(smart_enable=all)\n\n  \n-\n \npymdownx.caret\n\n  \n-\n \npymdownx.critic\n\n  \n-\n \npymdownx.emoji\n:\n\n      \nemoji_generator\n:\n \n!!python/name:pymdownx.emoji.to_svg\n\n  \n-\n \npymdownx.inlinehilite\n\n  \n-\n \npymdownx.magiclink\n\n  \n-\n \npymdownx.mark\n\n  \n-\n \npymdownx.smartsymbols\n\n  \n-\n \npymdownx.superfences\n\n  \n-\n \npymdownx.tasklist(custom_checkbox=true)\n\n  \n-\n \npymdownx.tilde\n\n\n\n\n\nUsage\n\u00b6\n\n\nGitHub Flavored Markdown\n\u00b6\n\n\nMost of the extensions included in the PyMdown Extensions package try to bring\nthe Markdown experience closer to GitHub Flavored Markdown (GFM).\n\n\nThe PyMdown Extensions package adds a shorthand to enable all of the included\nextensions that provide the GFM experience. However, usage of the shorthand is\ndiscouraged, because some extensions are not supported, as the Material theme\nuses some incompatible extensions included in the standard Markdown library.\n\n\nBetterEm\n\u00b6\n\n\nBetterEm\n improves the handling of emphasis markup (\nbold\n and \nitalic\n)\nwithin Markdown by providing a more sophisticated parser for better detecting\nstart and end tokens. Read the documentation for \nusage notes\n.\n\n\nEmoji\n\u00b6\n\n\nEmoji\n adds the ability to insert a \n-load of emojis that we use in\nour daily lives. See the \nEmojiOne demo\n for a list of all available\nemojis. Happy scrolling \n\n\n\n\nLegal disclaimer\n\n\nMaterial has no affiliation with \nEmojiOne\n which is released under\n\nCC BY 4.0\n. When including EmojiOne images or CSS, please read the\n\nEmojiOne license\n to ensure proper usage and attribution.\n\n\n\n\nMagicLink\n\u00b6\n\n\nMagicLink\n detects links in Markdown and auto-generates the necessary\nmarkup, so no special syntax is required. It auto-links \nhttp[s]://\n and\n\nftp://\n links, as well as references to email addresses:\n\n\nSuperFences\n\u00b6\n\n\nSuperFences\n provides the ability to nest code blocks under blockquotes,\nlists and other block elements, which the \nFenced Code Blocks\n extension\nfrom the standard Markdown library doesn't parse correctly.\n\n\nTasklist\n\u00b6\n\n\nTasklist\n adds support for styled checkbox lists. This is useful for\nkeeping track of tasks and showing what has been done and has yet to be done.\nCheckbox lists are like regular lists, but prefixed with \n[ ]\n for empty or\n\n[x]\n for filled checkboxes.\n\n\nExample:\n\n\n* [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\nResult:\n\n\n\n\n Lorem ipsum dolor sit amet, consectetur adipiscing elit\n\n\n Nulla lobortis egestas semper\n\n\n Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n\n\n Vestibulum convallis sit amet nisi a tincidunt\n\n\n In hac habitasse platea dictumst\n\n\n In scelerisque nibh non dolor mollis congue sed et metus\n\n\n Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n\n\n Praesent sed risus massa\n\n\n\n\n\n\n Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n\n\n Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\nTilde\n\u00b6\n\n\nTilde\n provides an easy way to \nstrike through\n cross out\u00a0text.\nThe portion of text that should be erased must be enclosed in two tildes\n\n~~...~~\n and the extension will take care of the rest.\n\n\nMore syntactic sugar\n\u00b6\n\n\nCaret\n\u00b6\n\n\nCaret\n is the sister extension of \nTilde\n and makes it possible to\nhighlight \ninserted text\n. The portion of text that should be marked as added\nmust be enclosed in two carets \n^^...^^\n.\n\n\nMark\n\u00b6\n\n\nMark\n adds the ability to \nhighlight text\n like it was marked with a\n\nyellow text marker\n. The portion of text that should be highlighted must be\nenclosed in two equal signs \n==...==\n.\n\n\nSmartSymbols\n\u00b6\n\n\nSmartSymbols\n converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright\nsymbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).\n\n\nCritic\n\u00b6\n\n\nCritic\n implements \nCritic Markup\n, a Markdown extension that enables\nthe tracking of changes (additions, deletions and comments) on documents.\nDuring compilation of the Markdown document, changes can be rendered (default),\naccepted or rejected.\n\n\nText can be \ndeleted\n and replacement text \nadded\n. This can also be\ncombined into \none\na single\n operation. \nHighlighting\n is also\npossible \nand comments can be added inline\n.\n\n\n\n\nFormatting can also be applied to blocks, by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#theme-documentation",
            "text": "",
            "title": "Theme Documentation"
        },
        {
            "location": "/documentation/#blockquotes",
            "text": "Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a.",
            "title": "Blockquotes"
        },
        {
            "location": "/documentation/#lists",
            "text": "",
            "title": "Lists"
        },
        {
            "location": "/documentation/#unordered-lists",
            "text": "Sed sagittis eleifend rutrum.  Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.    Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex.  Nulla et rhoncus turpis.",
            "title": "Unordered lists"
        },
        {
            "location": "/documentation/#ordered-lists",
            "text": "Integer vehicula feugiat magna, a mollis tellus.     Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus.    Vivamus venenatis porttitor tortor sit amet rutrum.     Morbi eget dapibus felis.     Pellentesque eget  var   _extends  ornare tellus, ut gravida mi.      Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis.",
            "title": "Ordered lists"
        },
        {
            "location": "/documentation/#definition-lists",
            "text": "Lorem ipsum dolor sit amet   Sed sagittis eleifend rutrum. Donec vitae suscipit est.   Cras arcu libero   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\nut eros sed sapien ullamcorper consequat.",
            "title": "Definition lists"
        },
        {
            "location": "/documentation/#code-blocks",
            "text": "1\n2\n3\n4\n5\n6\n7\n8\n9 var   _extends   =   function ( target )   { \n   for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   }     return   target ;  };",
            "title": "Code blocks"
        },
        {
            "location": "/documentation/#horizontal-line",
            "text": "",
            "title": "Horizontal line"
        },
        {
            "location": "/documentation/#data-tables",
            "text": "Sollicitudo / Pellentesi  consectetur  adipiscing      Vivamus a pharetra  yes  yes    Ornare viverra ex  yes  yes    Mauris a ullamcorper  yes  yes    Nullam urna elit  yes  yes    Malesuada eget finibus  yes  yes",
            "title": "Data tables"
        },
        {
            "location": "/documentation/#notes",
            "text": "Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Phasellus posuere in sem ut cursus  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.  SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees   Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.    Summary  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Tip  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Success  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Warning  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Failure  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Danger  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Bug  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.    Quote  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Notes"
        },
        {
            "location": "/documentation/#code-block",
            "text": "import   tensorflow   as   tf   #!/usr/bin/python  import   tensorflow   as   tf    1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ): \n     for   i   in   range ( len ( items )): \n         for   j   in   range ( len ( items )   -   1   -   i ): \n             if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]  #!python hl_lines=\"3 4\"  \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ): \n     for   i   in   range ( len ( items )): \n         for   j   in   range ( len ( items )   -   1   -   i ): \n             if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]",
            "title": "Code Block"
        },
        {
            "location": "/documentation/#footnotes",
            "text": "Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]  Jump to footnote at the bottom of the page",
            "title": "Footnotes"
        },
        {
            "location": "/documentation/#metadata",
            "text": "The  Metadata  extension makes it possible to add metadata to a document\nwhich gives more control over the theme in a page-specific context.  Example:  title: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n## Permalinks\n\nPermalinks are a feature of the [Table of Contents][1] extension, which is part\nof the standard Markdown library. The extension inserts an anchor at the end of\neach headline, which makes it possible to directly link to a subpart of the\ndocument.\n\n  [1]: https://pythonhosted.org/Markdown/extensions/toc.html\n\n## Installation\n\nTo enable permalinks, add the following to your `mkdocs.yml`:\n\n``` yaml\nmarkdown_extensions:\n  - toc(permalink=true)  This will add a link containing the paragraph symbol  \u00b6  at the end of each\nheadline (exactly like on the page you're currently viewing), which the\nMaterial theme will make appear on hover. In order to change the text of the\npermalink, a string can be passed, e.g.:  markdown_extensions:\n  - toc(permalink=Link)",
            "title": "Metadata"
        },
        {
            "location": "/documentation/#pymdown-extensions",
            "text": "PyMdown Extensions  is a collection of Markdown extensions that add some\ngreat features to the standard Markdown library. For this reason, the installation of this package is highly recommended  as it's well-integrated\nwith the Material theme.",
            "title": "PyMdown Extensions"
        },
        {
            "location": "/documentation/#installation",
            "text": "The PyMdown Extensions package can be installed with the following command:  pip install pymdown-extensions  The following list of extensions that are part of the PyMdown Extensions\npackage are recommended to be used together with the Material theme:  markdown_extensions : \n   -   pymdownx.arithmatex \n   -   pymdownx.betterem(smart_enable=all) \n   -   pymdownx.caret \n   -   pymdownx.critic \n   -   pymdownx.emoji : \n       emoji_generator :   !!python/name:pymdownx.emoji.to_svg \n   -   pymdownx.inlinehilite \n   -   pymdownx.magiclink \n   -   pymdownx.mark \n   -   pymdownx.smartsymbols \n   -   pymdownx.superfences \n   -   pymdownx.tasklist(custom_checkbox=true) \n   -   pymdownx.tilde",
            "title": "Installation"
        },
        {
            "location": "/documentation/#usage",
            "text": "",
            "title": "Usage"
        },
        {
            "location": "/documentation/#github-flavored-markdown",
            "text": "Most of the extensions included in the PyMdown Extensions package try to bring\nthe Markdown experience closer to GitHub Flavored Markdown (GFM).  The PyMdown Extensions package adds a shorthand to enable all of the included\nextensions that provide the GFM experience. However, usage of the shorthand is\ndiscouraged, because some extensions are not supported, as the Material theme\nuses some incompatible extensions included in the standard Markdown library.",
            "title": "GitHub Flavored Markdown"
        },
        {
            "location": "/documentation/#betterem",
            "text": "BetterEm  improves the handling of emphasis markup ( bold  and  italic )\nwithin Markdown by providing a more sophisticated parser for better detecting\nstart and end tokens. Read the documentation for  usage notes .",
            "title": "BetterEm"
        },
        {
            "location": "/documentation/#emoji",
            "text": "Emoji  adds the ability to insert a  -load of emojis that we use in\nour daily lives. See the  EmojiOne demo  for a list of all available\nemojis. Happy scrolling    Legal disclaimer  Material has no affiliation with  EmojiOne  which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license  to ensure proper usage and attribution.",
            "title": "Emoji"
        },
        {
            "location": "/documentation/#magiclink",
            "text": "MagicLink  detects links in Markdown and auto-generates the necessary\nmarkup, so no special syntax is required. It auto-links  http[s]://  and ftp://  links, as well as references to email addresses:",
            "title": "MagicLink"
        },
        {
            "location": "/documentation/#superfences",
            "text": "SuperFences  provides the ability to nest code blocks under blockquotes,\nlists and other block elements, which the  Fenced Code Blocks  extension\nfrom the standard Markdown library doesn't parse correctly.",
            "title": "SuperFences"
        },
        {
            "location": "/documentation/#tasklist",
            "text": "Tasklist  adds support for styled checkbox lists. This is useful for\nkeeping track of tasks and showing what has been done and has yet to be done.\nCheckbox lists are like regular lists, but prefixed with  [ ]  for empty or [x]  for filled checkboxes.  Example:  * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi  Result:    Lorem ipsum dolor sit amet, consectetur adipiscing elit   Nulla lobortis egestas semper   Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est   Vestibulum convallis sit amet nisi a tincidunt   In hac habitasse platea dictumst   In scelerisque nibh non dolor mollis congue sed et metus   Sed egestas felis quis elit dapibus, ac aliquet turpis mattis   Praesent sed risus massa     Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque   Nulla vel eros venenatis, imperdiet enim id, faucibus nisi",
            "title": "Tasklist"
        },
        {
            "location": "/documentation/#tilde",
            "text": "Tilde  provides an easy way to  strike through  cross out\u00a0text.\nThe portion of text that should be erased must be enclosed in two tildes ~~...~~  and the extension will take care of the rest.",
            "title": "Tilde"
        },
        {
            "location": "/documentation/#more-syntactic-sugar",
            "text": "",
            "title": "More syntactic sugar"
        },
        {
            "location": "/documentation/#caret",
            "text": "Caret  is the sister extension of  Tilde  and makes it possible to\nhighlight  inserted text . The portion of text that should be marked as added\nmust be enclosed in two carets  ^^...^^ .",
            "title": "Caret"
        },
        {
            "location": "/documentation/#mark",
            "text": "Mark  adds the ability to  highlight text  like it was marked with a yellow text marker . The portion of text that should be highlighted must be\nenclosed in two equal signs  ==...== .",
            "title": "Mark"
        },
        {
            "location": "/documentation/#smartsymbols",
            "text": "SmartSymbols  converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright\nsymbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).",
            "title": "SmartSymbols"
        },
        {
            "location": "/documentation/#critic",
            "text": "Critic  implements  Critic Markup , a Markdown extension that enables\nthe tracking of changes (additions, deletions and comments) on documents.\nDuring compilation of the Markdown document, changes can be rendered (default),\naccepted or rejected.  Text can be  deleted  and replacement text  added . This can also be\ncombined into  one a single  operation.  Highlighting  is also\npossible  and comments can be added inline .   Formatting can also be applied to blocks, by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.",
            "title": "Critic"
        }
    ]
}