{
    "docs": [
        {
            "location": "/",
            "text": "Getting started\n\u00b6\n\n\nWe are an open source project, and some of our internal dev terms may spill out to the external SDK - apologies for this. But think of the SDK you download as being the API to a set of really cool services that allow smart devices to pay for services from oneanother\n\n\nWhat you get from the SDK you download from our git repo, is access to the API in all the supported languages (we refer this as the 'wrapper'), you will still need to get the core IoT component from the releases (we refer to this as the 'RPC-agent'). \nIf you're interested further on the internal architectcure of the project check this out\n.\n\n\nGet the SDK (software development kit) from the Github repository\n\u00b6\n\n\nPlease either download the repo, or clone the repo from Github, \nthe github repo for Worldpay Within can be found here\n\n\nDownload the core Iot component\n\u00b6\n\n\nThe Iot core component is sometimes called the \"RPC-Agent\" (and sometimes referred to as the binaries) from the Github Repository\n\n\n\n\nGo to the releases page here \nhttps://github.com/WPTechInnovation/worldpay-within-sdk/releases\n\n\nDownload the zip file entitled 'wpwithin-<version_number>-bins.tar.gz' e.g. wpwithin-0.4-bins.tar.gz - make sure to get the latest one though!\n\n\nYou don't need all the files in this download! Oh no, you'll just need the ones for the computer that you are developing on, and thing (smart device) that you are going to run it on.\n\n\nUnzip the file rpc-agent-bins-<version_number>.tar.gz\n\n\nChoose the RPC-agent file appropriate to your Thing or development machine.\n\n\n\n\nSetup your environment Worldpay Within\n\u00b6\n\n\nYou'll need to drop the core IoT component (RPC-agent file) into the appropriate place in the SDK (or wrapper directory).\n\n\nFollow the instructions for each supported language on where to place the core IoT component (RPC-agent file) and what to call it. The instructions will also let you know if there are any other pre-requisites to install on your device before you get started.\n\n\nJava\n\n\n.NET\n\n\nGo\n\n\nGo\n\n\nNode.js\n\n\nPython (2.7)",
            "title": "Getting started"
        },
        {
            "location": "/#getting-started",
            "text": "We are an open source project, and some of our internal dev terms may spill out to the external SDK - apologies for this. But think of the SDK you download as being the API to a set of really cool services that allow smart devices to pay for services from oneanother  What you get from the SDK you download from our git repo, is access to the API in all the supported languages (we refer this as the 'wrapper'), you will still need to get the core IoT component from the releases (we refer to this as the 'RPC-agent').  If you're interested further on the internal architectcure of the project check this out .",
            "title": "Getting started"
        },
        {
            "location": "/#get-the-sdk-software-development-kit-from-the-github-repository",
            "text": "Please either download the repo, or clone the repo from Github,  the github repo for Worldpay Within can be found here",
            "title": "Get the SDK (software development kit) from the Github repository"
        },
        {
            "location": "/#download-the-core-iot-component",
            "text": "The Iot core component is sometimes called the \"RPC-Agent\" (and sometimes referred to as the binaries) from the Github Repository   Go to the releases page here  https://github.com/WPTechInnovation/worldpay-within-sdk/releases  Download the zip file entitled 'wpwithin-<version_number>-bins.tar.gz' e.g. wpwithin-0.4-bins.tar.gz - make sure to get the latest one though!  You don't need all the files in this download! Oh no, you'll just need the ones for the computer that you are developing on, and thing (smart device) that you are going to run it on.  Unzip the file rpc-agent-bins-<version_number>.tar.gz  Choose the RPC-agent file appropriate to your Thing or development machine.",
            "title": "Download the core Iot component"
        },
        {
            "location": "/#setup-your-environment-worldpay-within",
            "text": "You'll need to drop the core IoT component (RPC-agent file) into the appropriate place in the SDK (or wrapper directory).  Follow the instructions for each supported language on where to place the core IoT component (RPC-agent file) and what to call it. The instructions will also let you know if there are any other pre-requisites to install on your device before you get started.  Java  .NET  Go  Go  Node.js  Python (2.7)",
            "title": "Setup your environment Worldpay Within"
        },
        {
            "location": "/the-flows/",
            "text": "There are certain flows that are allowable for the consumer and producer, and this flow should be adhered to when utilising the Worldpay Within SDK. What follows is a diagram of the flow, and then a detailed breakdown of the steps of the flows, what they do; and explicitly the order in which they should be followed.\n\n\nThe devices are not synchronised by the SDK in any way - so it is up to the developer of the app that sits on top of the SDK to call the Worldpay Within API in the correct order. This is the responsibility of the developer. However if the order below is adhered to then the outcome of the functionality will be as desired.\n\n\nThe Flows diagram\n\u00b6\n\n\n\n    \n\n    \nThe flows of the producer and consumer.\n\n\n\n\n\nThe Consumer flow\n\u00b6\n\n\n\n\nNote\n\n\nThis is the flow of the consumer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.\n\n\n\n\n\n\n\n\n\n\nStep in Flow\n\n\nWhat it does\n\n\n\n\n\n\n\n\n\n\n1. SETUP\n\n\nSetups up the device\n\n\n\n\n\n\n2. DEVICE DISCOVERY\n\n\nDiscover devices that are broadcasting messages\n\n\n\n\n\n\n3. (CHOOSE MESSAGE)\n\n\nChoose the message, then use that information in the following steps\n\n\n\n\n\n\n4. INIT CONSUMER\n\n\nInitialises the device as a consumer\n\n\n\n\n\n\n5. REQUEST SERVICES\n\n\nRequest service messages from the device that is broadcasting, which lists what services it's offering\n\n\n\n\n\n\n6. GET SERVICE PRICES\n\n\nGet's the prices for the service you are interested in\n\n\n\n\n\n\n7. SELECT SERVICE\n\n\nSelects the service the device wants to consume\n\n\n\n\n\n\n8. MAKE PAYMENT\n\n\nMakes a payment for the service that is chosen\n\n\n\n\n\n\n9. BEGIN SERVICE DELIVERY\n\n\nStarts the process / flow to consume the service based on the service token received\n\n\n\n\n\n\n10. STOP SERVICE DELIVERY\n\n\nCalled to tell the other thing that it has completed it's consumption of the service\n\n\n\n\n\n\n\n\nThe Producer flow\n\u00b6\n\n\n\n\nNote\n\n\nThis is the flow of the producer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.\n\n\n\n\n\n\n\n\n\n\nStep in Flow\n\n\nWhat it does\n\n\n\n\n\n\n\n\n\n\n1. SETUP\n\n\nSetups the device\n\n\n\n\n\n\n2A. ADD SERVICE\n\n\nAdds a service to the producer\n\n\n\n\n\n\n2B. REMOVE SERVICE\n\n\nRemvoves a service from the producer\n\n\n\n\n\n\n3. INIT PRODUCER\n\n\nInitialises the producer\n\n\n\n\n\n\n4A. START BROADCAST\n\n\nStarts the producer broadcasting it's service message\n\n\n\n\n\n\n4B. STOP BROADCAST\n\n\nStops the producer from broadcasting it's service message\n\n\n\n\n\n\n\n\nAPI calls\n\u00b6\n\n\nThe steps in the flow neatly map to the api flows, here is some further information about what they do:\n\n\n\n\n\n\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsetup\n\n\nSets up the wrapper to be able to start communicating with the underlying SDK\n\n\n\n\n\n\naddService\n\n\nAdds a service of type WWSerive to the producer, used if the device you are operating on is a producer, if added to a device you intend as a consumer this will give that device producer functionality\n\n\n\n\n\n\nremoveService\n\n\nThis removes the service from the producer\n\n\n\n\n\n\ninitConsumer\n\n\nThis initiates the device as a consumer, which enables it to find services, negotiate prices, make payments and receive services\n\n\n\n\n\n\ninitProducer\n\n\nThis initiates the device as a producer / or initialises the devices producer capability\n\n\n\n\n\n\ngetDevice\n\n\nThis is able to provide back details of the the current device that the SDK is running on, and it credentials / information\n\n\n\n\n\n\nstartServiceBroadcast\n\n\nThis enables the producer device to start broadcasting itself via UDP broadcast over the network to notifiy devices it is available to be consumed\n\n\n\n\n\n\nstopServiceBroadcast\n\n\nThis method stops the SDK from broadcasting the current service messages that it is broadcasting\n\n\n\n\n\n\ndeviceDiscovery\n\n\nThis enables the consumer device to discovery other devices (producers) on the network that are UDP broadcasting\n\n\n\n\n\n\nrequestServices\n\n\nGet a list of services that are avaialble from the broadcasting device\n\n\n\n\n\n\ngetServicePrices\n\n\nThis is used by the consumer to get the list of prices associated with a particular serviceId\n\n\n\n\n\n\nselectService\n\n\nSelection of a service is performed by the consumer, providing details of the service, the amount and at what price point it wants to purchase the service\n\n\n\n\n\n\nmakePayment\n\n\nThis allows the consumer to request a payment be made at the producer device, by providing the total price response object as the request. The producer will then make the payment (or attempt to) and send back a Payment Response detailing whether it was successful or not\n\n\n\n\n\n\nbeginServiceDelivery\n\n\nThis begins the service delivery, and is requested by the consumer, and will proceed as long as the correct information is provided to the producer. If the correct credentials are passed through, then the producer will start releasing the service known as a 'trusted trigger'\n\n\n\n\n\n\nendServiceDelivery\n\n\nThis ends the service delivery, a request initiated by the consumer",
            "title": "The Flows"
        },
        {
            "location": "/the-flows/#the-flows-diagram",
            "text": "The flows of the producer and consumer.",
            "title": "The Flows diagram"
        },
        {
            "location": "/the-flows/#the-consumer-flow",
            "text": "Note  This is the flow of the consumer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.      Step in Flow  What it does      1. SETUP  Setups up the device    2. DEVICE DISCOVERY  Discover devices that are broadcasting messages    3. (CHOOSE MESSAGE)  Choose the message, then use that information in the following steps    4. INIT CONSUMER  Initialises the device as a consumer    5. REQUEST SERVICES  Request service messages from the device that is broadcasting, which lists what services it's offering    6. GET SERVICE PRICES  Get's the prices for the service you are interested in    7. SELECT SERVICE  Selects the service the device wants to consume    8. MAKE PAYMENT  Makes a payment for the service that is chosen    9. BEGIN SERVICE DELIVERY  Starts the process / flow to consume the service based on the service token received    10. STOP SERVICE DELIVERY  Called to tell the other thing that it has completed it's consumption of the service",
            "title": "The Consumer flow"
        },
        {
            "location": "/the-flows/#the-producer-flow",
            "text": "Note  This is the flow of the producer, please note that these flow steps map to the interface either in Go or in the Wrapper - e.g. in Java this is fully documented in the javadoc.      Step in Flow  What it does      1. SETUP  Setups the device    2A. ADD SERVICE  Adds a service to the producer    2B. REMOVE SERVICE  Remvoves a service from the producer    3. INIT PRODUCER  Initialises the producer    4A. START BROADCAST  Starts the producer broadcasting it's service message    4B. STOP BROADCAST  Stops the producer from broadcasting it's service message",
            "title": "The Producer flow"
        },
        {
            "location": "/the-flows/#api-calls",
            "text": "The steps in the flow neatly map to the api flows, here is some further information about what they do:     Method  Description      setup  Sets up the wrapper to be able to start communicating with the underlying SDK    addService  Adds a service of type WWSerive to the producer, used if the device you are operating on is a producer, if added to a device you intend as a consumer this will give that device producer functionality    removeService  This removes the service from the producer    initConsumer  This initiates the device as a consumer, which enables it to find services, negotiate prices, make payments and receive services    initProducer  This initiates the device as a producer / or initialises the devices producer capability    getDevice  This is able to provide back details of the the current device that the SDK is running on, and it credentials / information    startServiceBroadcast  This enables the producer device to start broadcasting itself via UDP broadcast over the network to notifiy devices it is available to be consumed    stopServiceBroadcast  This method stops the SDK from broadcasting the current service messages that it is broadcasting    deviceDiscovery  This enables the consumer device to discovery other devices (producers) on the network that are UDP broadcasting    requestServices  Get a list of services that are avaialble from the broadcasting device    getServicePrices  This is used by the consumer to get the list of prices associated with a particular serviceId    selectService  Selection of a service is performed by the consumer, providing details of the service, the amount and at what price point it wants to purchase the service    makePayment  This allows the consumer to request a payment be made at the producer device, by providing the total price response object as the request. The producer will then make the payment (or attempt to) and send back a Payment Response detailing whether it was successful or not    beginServiceDelivery  This begins the service delivery, and is requested by the consumer, and will proceed as long as the correct information is provided to the producer. If the correct credentials are passed through, then the producer will start releasing the service known as a 'trusted trigger'    endServiceDelivery  This ends the service delivery, a request initiated by the consumer",
            "title": "API calls"
        },
        {
            "location": "/documentation/",
            "text": "Theme Documentation\n\u00b6\n\n\nBlockquotes\n\u00b6\n\n\n\n\nMorbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a.\n\n\n\n\nBlockquote nesting\n\u00b6\n\n\n\n\nSed aliquet\n, neque at rutrum mollis, neque nisi tincidunt nibh, vitae\n  faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem\n  \nlibero fermentum\n urna, ut efficitur elit ligula et nunc.\n\n\n\n\nMauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla.\n    Ut sit amet placerat ante.\n\n\n\n\nSuspendisse rutrum facilisis risus\n, eu posuere neque commodo a.\n      Interdum et malesuada fames ac ante ipsum primis in faucibus.\n\n\n\n\n\n\n\n\nOther content blocks\n\u00b6\n\n\n\n\nVestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis.\n  \nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\nPraesent at \nreturn\n \ntarget\n, sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.\n\n\n\n\n\n\nLists\n\u00b6\n\n\nUnordered lists\n\u00b6\n\n\n\n\nSed sagittis eleifend rutrum.\n\n\nDuis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n\n\nNam vulputate tincidunt fringilla.\n\n\nNullam dignissim ultrices urna non auctor.\n\n\n\n\n\n\nAliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex.\n\n\nNulla et rhoncus turpis. \n\n\n\n\nOrdered lists\n\u00b6\n\n\n\n\n\n\nInteger vehicula feugiat magna, a mollis tellus. \n\n\n\n\n\n\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus.\n\n\n\n\n\n\nVivamus venenatis porttitor tortor sit amet rutrum. \n\n\n\n\nMauris dictum mi lacus\n\n\nUt sit amet placerat ante\n\n\nSuspendisse ac eros arcu\n\n\n\n\n\n\n\n\nMorbi eget dapibus felis. \n\n\n\n\n\n\nPellentesque eget \nvar\n \n_extends\n ornare tellus, ut gravida mi.\n\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\n\n\n\n\n\nVivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n  sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n  nulla. Vivamus a pharetra leo.\n\n\n\n\n\n\nDefinition lists\n\u00b6\n\n\n\n\nLorem ipsum dolor sit amet\n\n\n\n\nSed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\ntellus non sem sollicitudin, quis rutrum leo facilisis.\n\n\nDuis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\nNam vulputate tincidunt fringilla.\n\n\n\n\nCras arcu libero\n\n\n\n\nAliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\nut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at\naliquam ac, aliquet sed mauris.\n\n\n\n\n\n\nCode blocks\n\u00b6\n\n\nInline\n\u00b6\n\n\nMorbi eget \ndapibus felis\n. Vivamus \nvenenatis porttitor\n tortor sit amet\nrutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\nper inceptos himenaeos. \nPellentesque aliquet quam enim\n, eu volutpat urna\nrutrum a.\n\n\nNam vehicula nunc \nreturn\n \ntarget\n mauris, a ultricies libero efficitur\nsed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque\neget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.\n\n\nListing\n\u00b6\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\nvar\n \n_extends\n \n=\n \nfunction\n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\n\n\n\n\nHorizontal rules\n\u00b6\n\n\n\n\nData tables\n\u00b6\n\n\n\n\n\n\n\n\nSollicitudo / Pellentesi\n\n\nconsectetur\n\n\nadipiscing\n\n\n\n\n\n\n\n\n\n\nVivamus a pharetra\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nOrnare viverra ex\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nMauris a ullamcorper\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nNullam urna elit\n\n\nyes\n\n\nyes\n\n\n\n\n\n\nMalesuada eget finibus\n\n\nyes\n\n\nyes\n\n\n\n\n\n\n\n\nAdmonition\n\u00b6\n\n\nAdmonition\n is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nChanging the title\n\u00b6\n\n\n\n\nPhasellus posuere in sem ut cursus\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nRemoving the title\n\u00b6\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nEmbedded code blocks\n\u00b6\n\n\nBlocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.\n\n\nHowever, the \nPyMdown Extensions\n package adds an extension called\n\nSuperFences\n, which makes it possible to nest code blocks within other\nblocks.\n\n\nExample:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n'087652'\n;\n\n\n\n\n\nNunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.\n\n\n\n\nTypes\n\u00b6\n\n\nAdmonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers supported by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is \nnote\n.\n\n\nNote\n\u00b6\n\n\nExample:\n\n\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nNote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nnote\n\n\nseealso\n\n\n\n\nSummary\n\u00b6\n\n\nExample:\n\n\n!!! summary\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nSummary\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nsummary\n\n\ntldr\n\n\n\n\nTip\n\u00b6\n\n\nExample:\n\n\n!!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nTip\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ntip\n\n\nhint\n\n\nimportant\n\n\n\n\nSuccess\n\u00b6\n\n\nExample:\n\n\n!!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nSuccess\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nsuccess\n\n\ncheck\n\n\ndone\n\n\n\n\nWarning\n\u00b6\n\n\nExample:\n\n\n!!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nWarning\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nwarning\n\n\ncaution\n\n\nattention\n\n\n\n\nFailure\n\u00b6\n\n\nExample:\n\n\n!!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nFailure\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nfailure\n\n\nfail\n\n\nmissing\n\n\n\n\nDanger\n\u00b6\n\n\nExample:\n\n\n!!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nDanger\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\ndanger\n\n\nerror\n\n\n\n\nBug\n\u00b6\n\n\nExample:\n\n\n!!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nBug\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nbug\n\n\n\n\nQuote\n\u00b6\n\n\nExample:\n\n\n!!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\n\n\nQuote\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n\n\n\nQualifiers:\n\n\n\n\nquote\n\n\ncite\n\n\n\n\nCodeHilite\n\u00b6\n\n\nCodeHilite\n is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.\n\n\n\n\nSyntax highlighting not working?\n\n\nPlease ensure that \nPygments\n is installed. See the next section for\nfurther directions on how to set up Pygments or use the official\n\nDocker image\n with all dependencies pre-installed.\n\n\n\n\nInstallation\n\u00b6\n\n\nCodeHilite parses code blocks and wraps them in \npre\n tags. If \nPygments\n\nis installed, which is a generic syntax highlighter with support for over\n\n300 languages\n, CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:\n\n\npip install pygments\n\n\n\n\nTo enable CodeHilite, add the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite\n\n\n\n\n\n\n\nMigrating from Material 0.2.x\n\n\nIn 0.2.x the CodeHilite extension was included with\n\ncodehilite(css_class=code)\n which switched the CSS class from\n\n.codehilite\n to \n.code\n. The current version of the theme doesn't require\nthat and defines styles for the default \n.codehilite\n class, so the part\n\ncss_class=code\n needs to be removed.\n\n\n\n\nUsage\n\u00b6\n\n\nSpecifying the language\n\u00b6\n\n\nThe CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.\n\n\nvia Markdown syntax \nrecommended\n\u00b6\n\n\nIn Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.\n\n\nExample:\n\n\n``` python\nimport tensorflow as tf\n```\n\n\n\n\nResult:\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\nvia Shebang\n\u00b6\n\n\nAlternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.\n\n\nExample:\n\n\n    #!/usr/bin/python\n    import tensorflow as tf\n\n\n\n\nResult:\n\n\n#!/usr/bin/python\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\nvia three colons\n\u00b6\n\n\nIf the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.\n\n\nExample:\n\n\n    :::python\n    import tensorflow as tf\n\n\n\n\nResult:\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\n\n\n\nAdding line numbers\n\u00b6\n\n\nLine numbers can be added by enabling the \nlinenums\n flag in your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(linenums=true)\n\n\n\n\n\nExample:\n\n\n``` python\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nHighlighting specific lines\n\u00b6\n\n\nSpecific lines can be highlighted by passing the line numbers to the \nhl_lines\n\nargument placed right after the language identifier. Line counts start at 1.\n\n\nExample:\n\n\n``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```\n\n\n\n\nResult:\n\n\n1\n2\n3\n4\n5\n6\n\"\"\" Bubble sort \"\"\"\n\n\ndef\n \nbubble_sort\n(\nitems\n):\n\n\n    \nfor\n \ni\n \nin\n \nrange\n(\nlen\n(\nitems\n)):\n\n\n        \nfor\n \nj\n \nin\n \nrange\n(\nlen\n(\nitems\n)\n \n-\n \n1\n \n-\n \ni\n):\n\n\n            \nif\n \nitems\n[\nj\n]\n \n>\n \nitems\n[\nj\n \n+\n \n1\n]:\n\n                \nitems\n[\nj\n],\n \nitems\n[\nj\n \n+\n \n1\n]\n \n=\n \nitems\n[\nj\n \n+\n \n1\n],\n \nitems\n[\nj\n]\n\n\n\n\n\n\n\nSupported languages \nexcerpt\n\u00b6\n\n\nCodeHilite uses \nPygments\n, a generic syntax highlighter with support for\nover \n300 languages\n, so the following list of examples is just an excerpt.\n\n\nBash\n\u00b6\n\n\n#!/bin/bash\n\n\n\nfor\n OPT in \n\"\n$@\n\"\n\n\ndo\n\n  \ncase\n \n\"\n$OPT\n\"\n in\n    \n'-f'\n \n)\n  \ncanonicalize\n=\n1\n \n;;\n\n    \n'-n'\n \n)\n  \nswitchlf\n=\n\"-n\"\n \n;;\n\n  \nesac\n\n\ndone\n\n\n\n# readlink -f\n\n\nfunction\n __readlink_f \n{\n\n  \ntarget\n=\n\"\n$1\n\"\n\n  \nwhile\n \ntest\n -n \n\"\n$target\n\"\n;\n \ndo\n\n    \nfilepath\n=\n\"\n$target\n\"\n\n    \ncd\n \n`\ndirname \n\"\n$filepath\n\"\n`\n\n    \ntarget\n=\n`\nreadlink \n\"\n$filepath\n\"\n`\n\n  \ndone\n\n  /bin/echo \n$switchlf\n \n`\npwd\n -P\n`\n/\n`\nbasename \n\"\n$filepath\n\"\n`\n\n\n}\n\n\n\nif\n \n[\n ! \n\"\n$canonicalize\n\"\n \n]\n;\n \nthen\n\n  readlink \n$switchlf\n \n\"\n$@\n\"\n\n\nelse\n\n  \nfor\n file in \n\"\n$@\n\"\n\n  \ndo\n\n    \ncase\n \n\"\n$file\n\"\n in\n      -* \n)\n  \n;;\n\n      *  \n)\n  __readlink_f \n\"\n$file\n\"\n \n;;\n\n    \nesac\n\n    \ndone\n\n\nfi\n\n\n\nexit\n \n$?\n\n\n\n\n\nC\n\u00b6\n\n\nextern\n \nsize_t\n\n\npb_varint_scan\n(\nconst\n \nuint8_t\n \ndata\n[],\n \nsize_t\n \nleft\n)\n \n{\n\n  \nassert\n(\ndata\n \n&&\n \nleft\n);\n\n  \nleft\n \n=\n \nleft\n \n>\n \n10\n \n?\n \n10\n \n:\n \nleft\n;\n\n\n\n#ifdef __SSE2__\n\n\n  \n/* Mapping: remaining bytes ==> bitmask */\n\n  \nstatic\n \nconst\n \nint\n \nmask_map\n[]\n \n=\n \n{\n\n    \n0x0000\n,\n \n0x0001\n,\n \n0x0003\n,\n \n0x0007\n,\n\n    \n0x000F\n,\n \n0x001F\n,\n \n0x003F\n,\n \n0x007F\n,\n\n    \n0x00FF\n,\n \n0x01FF\n,\n \n0x03FF\n\n  \n};\n\n\n  \n/* Load buffer into 128-bit integer and create high-bit mask */\n\n  \n__m128i\n \ntemp\n \n=\n \n_mm_loadu_si128\n((\nconst\n \n__m128i\n \n*\n)\ndata\n);\n\n  \n__m128i\n \nhigh\n \n=\n \n_mm_set1_epi8\n(\n0x80\n);\n\n\n  \n/* Intersect and extract mask with high-bits set */\n\n  \nint\n \nmask\n \n=\n \n_mm_movemask_epi8\n(\n_mm_and_si128\n(\ntemp\n,\n \nhigh\n));\n\n  \nmask\n \n=\n \n(\nmask\n \n&\n \nmask_map\n[\nleft\n])\n \n^\n \nmask_map\n[\nleft\n];\n\n\n  \n/* Count trailing zeroes */\n\n  \nreturn\n \nmask\n \n?\n \n__builtin_ctz\n(\nmask\n)\n \n+\n \n1\n \n:\n \n0\n;\n\n\n\n#else\n\n\n  \n/* Linear scan */\n\n  \nsize_t\n \nsize\n \n=\n \n0\n;\n\n  \nwhile\n \n(\ndata\n[\nsize\n++\n]\n \n&\n \n0x80\n)\n\n    \nif\n \n(\n!--\nleft\n)\n\n      \nreturn\n \n0\n;\n\n  \nreturn\n \nsize\n;\n\n\n\n#endif \n/* __SSE2__ */\n\n\n\n}\n\n\n\n\n\nC++\n\u00b6\n\n\nExtension\n::\n\n\nExtension\n(\nconst\n \nDescriptor\n \n*\ndescriptor\n,\n \nconst\n \nDescriptor\n \n*\nscope\n)\n \n:\n\n    \ndescriptor_\n(\ndescriptor\n),\n\n    \nscope_\n(\nscope\n)\n \n{\n\n\n  \n/* Extract full name for signature */\n\n  \nvariables_\n[\n\"signature\"\n]\n \n=\n \ndescriptor_\n->\nfull_name\n();\n\n\n  \n/* Prepare message symbol */\n\n  \nvariables_\n[\n\"message\"\n]\n \n=\n \nStringReplace\n(\n\n    \nvariables_\n[\n\"signature\"\n],\n \n\".\"\n,\n \n\"_\"\n,\n \ntrue\n);\n\n  \nLowerString\n(\n&\n(\nvariables_\n[\n\"message\"\n]));\n\n\n  \n/* Suffix scope to identifiers, if given */\n\n  \nstring\n \nsuffix\n \n(\n\"\"\n);\n\n  \nif\n \n(\nscope_\n)\n \n{\n\n    \nsuffix\n \n=\n \nscope_\n->\nfull_name\n();\n\n\n    \n/* Check if the base and extension types are in the same package */\n\n    \nif\n \n(\n!\nscope_\n->\nfile\n()\n->\npackage\n().\ncompare\n(\ndescriptor_\n->\nfile\n()\n->\npackage\n()))\n\n      \nsuffix\n \n=\n \nStripPrefixString\n(\nsuffix\n,\n\n        \nscope_\n->\nfile\n()\n->\npackage\n()\n \n+\n \n\".\"\n);\n\n\n    \n/* Append to signature */\n\n    \nvariables_\n[\n\"signature\"\n]\n \n+=\n \n\".[\"\n \n+\n \nsuffix\n \n+\n\"]\"\n;\n\n    \nsuffix\n \n=\n \n\"_\"\n \n+\n \nsuffix\n;\n\n  \n}\n\n\n  \n/* Prepare extension symbol */\n\n  \nvariables_\n[\n\"extension\"\n]\n \n=\n \nStringReplace\n(\n\n    \nsuffix\n,\n \n\".\"\n,\n \n\"_\"\n,\n \ntrue\n);\n\n  \nLowerString\n(\n&\n(\nvariables_\n[\n\"extension\"\n]));\n\n\n}\n\n\n\n\n\nC#\n\u00b6\n\n\npublic\n \nstatic\n \nvoid\n \nSend\n(\n\n    \nSocket\n \nsocket\n,\n \nbyte\n[]\n \nbuffer\n,\n \nint\n \noffset\n,\n \nint\n \nsize\n,\n \nint\n \ntimeout\n)\n \n{\n\n  \nint\n \nstartTickCount\n \n=\n \nEnvironment\n.\nTickCount\n;\n\n  \nint\n \nsent\n \n=\n \n0\n;\n\n  \ndo\n \n{\n\n    \nif\n \n(\nEnvironment\n.\nTickCount\n \n>\n \nstartTickCount\n \n+\n \ntimeout\n)\n\n      \nthrow\n \nnew\n \nException\n(\n\"Timeout.\"\n);\n\n    \ntry\n \n{\n\n      \nsent\n \n+=\n \nsocket\n.\nSend\n(\nbuffer\n,\n \noffset\n \n+\n \nsent\n,\n\n        \nsize\n \n-\n \nsent\n,\n \nSocketFlags\n.\nNone\n);\n\n    \n}\n \ncatch\n \n(\nSocketException\n \nex\n)\n \n{\n\n      \nif\n \n(\nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nWouldBlock\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nIOPending\n \n||\n\n          \nex\n.\nSocketErrorCode\n \n==\n \nSocketError\n.\nNoBufferSpaceAvailable\n)\n \n{\n\n        \n/* Socket buffer is probably full, wait and try again */\n\n        \nThread\n.\nSleep\n(\n30\n);\n\n      \n}\n \nelse\n \n{\n\n        \nthrow\n \nex\n;\n\n      \n}\n\n    \n}\n\n  \n}\n \nwhile\n \n(\nsent\n \n<\n \nsize\n);\n\n\n}\n\n\n\n\n\nClojure\n\u00b6\n\n\n(\nclojure-version\n)\n\n\n\n(\ndefn \npartition-when\n\n  \n[\nf\n]\n\n  \n(\nfn \n[\nrf\n]\n\n    \n(\nlet \n[\na\n \n(\njava.util.ArrayList.\n)\n\n          \nfval\n \n(\nvolatile!\n \nfalse\n)]\n\n      \n(\nfn\n\n        \n([]\n \n(\nrf\n))\n\n        \n([\nresult\n]\n\n           \n(\nlet \n[\nresult\n \n(\nif \n(\n.isEmpty\n \na\n)\n\n                          \nresult\n\n                          \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                            \n;; Clear first\n\n                            \n(\n.clear\n \na\n)\n\n                            \n(\nunreduced\n \n(\nrf\n \nresult\n \nv\n))))]\n\n             \n(\nrf\n \nresult\n)))\n\n        \n([\nresult\n \ninput\n]\n\n            \n(\nif-not \n(\nand \n(\nf\n \ninput\n)\n  \n@\nfval\n)\n\n               \n(\ndo\n\n                 \n(\nvreset!\n \nfval\n \ntrue\n)\n\n                 \n(\n.add\n \na\n \ninput\n)\n\n                 \nresult\n)\n\n               \n(\nlet \n[\nv\n \n(\nvec\n \n(\n.toArray\n \na\n))]\n\n                 \n(\n.clear\n \na\n)\n\n                 \n(\nlet \n[\nret\n \n(\nrf\n \nresult\n \nv\n)]\n\n                   \n(\nwhen-not \n(\nreduced?\n \nret\n)\n\n                     \n(\n.add\n \na\n \ninput\n))\n\n                   \nret\n))))))))\n\n\n\n\n(\ninto \n[]\n \n(\npartition-when\n\n          \n#\n(\n.startsWith\n \n%\n \n\">>\"\n))\n\n          \n[\n\"1d\"\n \n\"33\"\n \n\">> 1\"\n \n\">> 2\"\n \n\"22\"\n \n\">> 3\"\n])\n\n\n\n\n\nDiff\n\u00b6\n\n\nIndex: grunt.js\n\n\n===================================================================\n\n\n--- grunt.js    (revision 31200)\n\n\n+++ grunt.js    (working copy)\n\n\n@@ -12,6 +12,7 @@\n\n\n module.exports = function (grunt) {\n\n\n+  console.log('hello world');\n\n   // Project configuration.\n   grunt.initConfig({\n     lint: {\n\n@@ -19,10 +20,6 @@\n\n         'packages/services.web/{!(test)/**/,}*.js',\n         'packages/error/**/*.js'\n       ],\n\n-      scripts: [\n\n\n-        'grunt.js',\n\n\n-        'db/**/*.js'\n\n\n-      ],\n\n       browser: [\n         'packages/web/server.js',\n         'packages/web/server/**/*.js',\n\n\n\n\nDocker\n\u00b6\n\n\nFROM\n ubuntu\n\n\n\n# Install vnc, xvfb in order to create a 'fake' display and firefox\n\n\nRUN\n apt-get update \n&&\n apt-get install -y x11vnc xvfb firefox\n\nRUN\n mkdir ~/.vnc\n\n\n# Setup a password\n\n\nRUN\n x11vnc -storepasswd \n1234\n ~/.vnc/passwd\n\n\n# Autostart firefox (might not be the best way, but it does the trick)\n\n\nRUN\n bash -c \n'echo \"firefox\" >> /.bashrc'\n\n\n\nEXPOSE\n 5900\n\n\nCMD\n [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]\n\n\n\n\n\nElixir\n\u00b6\n\n\nrequire\n \nLogger\n\n\n\ndef\n \naccept\n(\nport\n)\n \ndo\n\n  \n{\n:ok\n,\n \nsocket\n}\n \n=\n \n:gen_tcp\n.\nlisten\n(\nport\n,\n\n                    \n[\n:binary\n,\n \npacket\n:\n \n:line\n,\n \nactive\n:\n \nfalse\n,\n \nreuseaddr\n:\n \ntrue\n])\n\n  \nLogger\n.\ninfo\n \n\"Accepting connections on port \n#{\nport\n}\n\"\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nloop_acceptor\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \nclient\n}\n \n=\n \n:gen_tcp\n.\naccept\n(\nsocket\n)\n\n  \nserve\n(\nclient\n)\n\n  \nloop_acceptor\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nserve\n(\nsocket\n)\n \ndo\n\n  \nsocket\n\n  \n|>\n \nread_line\n()\n\n  \n|>\n \nwrite_line\n(\nsocket\n)\n\n\n  \nserve\n(\nsocket\n)\n\n\nend\n\n\n\ndefp\n \nread_line\n(\nsocket\n)\n \ndo\n\n  \n{\n:ok\n,\n \ndata\n}\n \n=\n \n:gen_tcp\n.\nrecv\n(\nsocket\n,\n \n0\n)\n\n  \ndata\n\n\nend\n\n\n\ndefp\n \nwrite_line\n(\nline\n,\n \nsocket\n)\n \ndo\n\n  \n:gen_tcp\n.\nsend\n(\nsocket\n,\n \nline\n)\n\n\nend\n\n\n\n\n\nErlang\n\u00b6\n\n\ncircular\n(\nDefs\n)\n \n->\n\n  \n[\n \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n||\n\n    \n{\n \n{\n \nType\n,\n \nBase\n \n},\n \nFields\n \n}\n \n<-\n \nDefs\n,\n \nType\n \n==\n \nmsg\n,\n \ncircular\n(\nBase\n,\n \nDefs\n)\n \n].\n\n\n\ncircular\n(\nBase\n,\n \nDefs\n)\n \n->\n\n  \nFields\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nBase\n \n},\n \nDefs\n),\n\n  \ncircular\n(\nDefs\n,\n \nFields\n,\n \n[\nBase\n]).\n\n\n\ncircular\n(_\nDefs\n,\n \n[],\n \n_\nPath\n)\n \n->\n\n  \nfalse\n;\n\n\ncircular\n(\nDefs\n,\n \n[\nField\n \n|\n \nFields\n],\n \nPath\n)\n \n->\n\n  \ncase\n \nField\n#field.type\n \nof\n\n    \n{\n \nmsg\n,\n \nType\n \n}\n \n->\n\n      \ncase\n \nlists\n:\nmember\n(\nType\n,\n \nPath\n)\n \nof\n\n        \nfalse\n \n->\n\n          \nChildren\n \n=\n \nproplists\n:\nget_value\n({\n \nmsg\n,\n \nType\n \n},\n \nDefs\n),\n\n          \ncase\n \ncircular\n(\nDefs\n,\n \nChildren\n,\n \n[\nType\n \n|\n \nPath\n])\n \nof\n\n            \nfalse\n \n->\n \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n);\n\n            \ntrue\n  \n->\n \ntrue\n\n          \nend\n;\n\n        \ntrue\n \n->\n\n          \nType\n \n==\n \nlists\n:\nlast\n(\nPath\n)\n \nandalso\n\n            \n(\nlength\n(\nPath\n)\n \n==\n \n1\n \norelse\n \nnot\n \nis_tree\n(\nPath\n))\n\n      \nend\n;\n\n    \n_\n \n->\n\n      \ncircular\n(\nDefs\n,\n \nFields\n,\n \nPath\n)\n\n  \nend\n.\n\n\n\n\n\nF#\n\u00b6\n\n\n/// Asynchronously download retangles from the server\n\n\n/// and decode the JSON format to F# Rectangle record\n\n\nlet\n \n[<\nJs\n>]\n \ngetRectangles\n \n()\n \n:\n \nAsync\n<\nRectangle\n[]\n>\n \n=\n \nasync\n \n{\n\n  \nlet\n \nreq\n \n=\n \nXMLHttpRequest\n()\n\n  \nreq\n.\nOpen\n(\n\"POST\"\n,\n \n\"/get\"\n,\n \ntrue\n)\n\n  \nlet!\n \nresp\n \n=\n \nreq\n.\nAsyncSend\n()\n\n  \nreturn\n \nJSON\n.\nparse\n(\nresp\n)\n \n}\n\n\n\n/// Repeatedly update rectangles after 0.5 sec\n\n\nlet\n \n[<\nJs\n>]\n \nupdateLoop\n \n()\n \n=\n \nasync\n \n{\n\n  \nwhile\n \ntrue\n \ndo\n\n    \ndo\n!\n \nAsync\n.\nSleep\n(\n500\n)\n\n    \nlet!\n \nrects\n \n=\n \ngetRectangles\n()\n\n    \ncleanRectangles\n()\n\n    \nrects\n \n|>\n \nArray\n.\niter\n \ncreateRectangle\n \n}\n\n\n\n\n\nGo\n\u00b6\n\n\npackage\n \nmain\n\n\n\nimport\n \n\"fmt\"\n\n\n\nfunc\n \ncounter\n(\nid\n \nint\n,\n \nchannel\n \nchan\n \nint\n,\n \ncloser\n \nbool\n)\n \n{\n\n  \nfor\n \ni\n \n:=\n \n0\n;\n \ni\n \n<\n \n10000000\n;\n \ni\n++\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\"process\"\n,\n \nid\n,\n\" send\"\n,\n \ni\n)\n\n    \nchannel\n \n<-\n \n1\n\n  \n}\n\n  \nif\n \ncloser\n \n{\n \nclose\n(\nchannel\n \n)\n \n}\n\n\n}\n\n\n\nfunc\n \nmain\n()\n \n{\n\n  \nchannel\n \n:=\n \nmake\n(\nchan\n \nint\n)\n\n  \ngo\n \ncounter\n(\n1\n,\n \nchannel\n,\n \nfalse\n)\n\n  \ngo\n \ncounter\n(\n2\n,\n \nchannel\n,\n \ntrue\n)\n\n\n  \nx\n \n:=\n \n0\n\n\n  \n// receiving data from channel\n\n  \nfor\n \ni\n \n:=\n \nrange\n \nchannel\n \n{\n\n    \nfmt\n.\nPrintln\n(\n\"receiving\"\n)\n\n    \nx\n \n+=\n \ni\n\n  \n}\n\n\n  \nfmt\n.\nPrintln\n(\nx\n)\n\n\n}\n\n\n\n\n\nHTML\n\u00b6\n\n\n<!doctype html>\n\n\n<\nhtml\n \nclass\n=\n\"no-js\"\n \nlang\n=\n\"\"\n>\n\n  \n<\nhead\n>\n\n    \n<\nmeta\n \ncharset\n=\n\"utf-8\"\n>\n\n    \n<\nmeta\n \nhttp-equiv\n=\n\"x-ua-compatible\"\n \ncontent\n=\n\"ie=edge\"\n>\n\n    \n<\ntitle\n>\nHTML5 Boilerplate\n</\ntitle\n>\n\n    \n<\nmeta\n \nname\n=\n\"description\"\n \ncontent\n=\n\"\"\n>\n\n    \n<\nmeta\n \nname\n=\n\"viewport\"\n \ncontent\n=\n\"width=device-width, initial-scale=1\"\n>\n\n\n    \n<\nlink\n \nrel\n=\n\"apple-touch-icon\"\n \nhref\n=\n\"apple-touch-icon.png\"\n>\n\n    \n<\nlink\n \nrel\n=\n\"stylesheet\"\n \nhref\n=\n\"css/normalize.css\"\n>\n\n    \n<\nlink\n \nrel\n=\n\"stylesheet\"\n \nhref\n=\n\"css/main.css\"\n>\n\n    \n<\nscript\n \nsrc\n=\n\"js/vendor/modernizr-2.8.3.min.js\"\n></\nscript\n>\n\n  \n</\nhead\n>\n\n  \n<\nbody\n>\n\n    \n<\np\n>\nHello world! This is HTML5 Boilerplate.\n</\np\n>\n\n  \n</\nbody\n>\n\n\n</\nhtml\n>\n\n\n\n\n\nJava\n\u00b6\n\n\nimport\n \njava.util.LinkedList\n;\n\n\nimport\n \njava.lang.reflect.Array\n;\n\n\n\npublic\n \nclass\n \nUnsortedHashSet\n<\nE\n>\n \n{\n\n\n  \nprivate\n \nstatic\n \nfinal\n \ndouble\n \nLOAD_FACTOR_LIMIT\n \n=\n \n0.7\n;\n\n\n  \nprivate\n \nint\n \nsize\n;\n\n  \nprivate\n \nLinkedList\n<\nE\n>[]\n \ncon\n;\n\n\n  \npublic\n \nUnsortedHashSet\n()\n \n{\n\n    \ncon\n  \n=\n \n(\nLinkedList\n<\nE\n>[])(\nnew\n \nLinkedList\n[\n10\n]);\n\n  \n}\n\n\n  \npublic\n \nboolean\n \nadd\n(\nE\n \nobj\n)\n \n{\n\n    \nint\n \noldSize\n \n=\n \nsize\n;\n\n    \nint\n \nindex\n \n=\n \nMath\n.\nabs\n(\nobj\n.\nhashCode\n())\n \n%\n \ncon\n.\nlength\n;\n\n    \nif\n \n(\ncon\n[\nindex\n]\n \n==\n \nnull\n)\n\n      \ncon\n[\nindex\n]\n \n=\n \nnew\n \nLinkedList\n<\nE\n>();\n\n    \nif\n \n(!\ncon\n[\nindex\n].\ncontains\n(\nobj\n))\n \n{\n\n      \ncon\n[\nindex\n].\nadd\n(\nobj\n);\n\n      \nsize\n++;\n\n    \n}\n\n    \nif\n \n(\n1.0\n \n*\n \nsize\n \n/\n \ncon\n.\nlength\n \n>\n \nLOAD_FACTOR_LIMIT\n)\n\n      \nresize\n();\n\n    \nreturn\n \noldSize\n \n!=\n \nsize\n;\n\n  \n}\n\n\n  \nprivate\n \nvoid\n \nresize\n()\n \n{\n\n    \nUnsortedHashSet\n<\nE\n>\n \ntemp\n \n=\n \nnew\n \nUnsortedHashSet\n<\nE\n>();\n\n    \ntemp\n.\ncon\n \n=\n \n(\nLinkedList\n<\nE\n>[])(\nnew\n \nLinkedList\n[\ncon\n.\nlength\n \n*\n \n2\n \n+\n \n1\n]);\n\n    \nfor\n \n(\nint\n \ni\n \n=\n \n0\n;\n \ni\n \n<\n \ncon\n.\nlength\n;\n \ni\n++)\n \n{\n\n      \nif\n \n(\ncon\n[\ni\n]\n \n!=\n \nnull\n)\n\n        \nfor\n \n(\nE\n \ne\n \n:\n \ncon\n[\ni\n])\n\n          \ntemp\n.\nadd\n(\ne\n);\n\n    \n}\n\n    \ncon\n \n=\n \ntemp\n.\ncon\n;\n\n  \n}\n\n\n  \npublic\n \nint\n \nsize\n()\n \n{\n\n    \nreturn\n \nsize\n;\n\n  \n}\n\n\n}\n\n\n\n\n\nJavaScript\n\u00b6\n\n\nvar\n \nMath\n \n=\n \nrequire\n(\n'lib/math'\n);\n\n\n\nvar\n \n_extends\n \n=\n \nfunction\n \n(\ntarget\n)\n \n{\n\n  \nfor\n \n(\nvar\n \ni\n \n=\n \n1\n;\n \ni\n \n<\n \narguments\n.\nlength\n;\n \ni\n++\n)\n \n{\n\n    \nvar\n \nsource\n \n=\n \narguments\n[\ni\n];\n\n    \nfor\n \n(\nvar\n \nkey\n \nin\n \nsource\n)\n \n{\n\n      \ntarget\n[\nkey\n]\n \n=\n \nsource\n[\nkey\n];\n\n    \n}\n\n  \n}\n\n\n  \nreturn\n \ntarget\n;\n\n\n};\n\n\n\nvar\n \ne\n \n=\n \nexports\n.\ne\n \n=\n \n2.71828182846\n;\n\n\nexports\n[\n'default'\n]\n \n=\n \nfunction\n \n(\nx\n)\n \n{\n\n  \nreturn\n \nMath\n.\nexp\n(\nx\n);\n\n\n};\n\n\n\nmodule\n.\nexports\n \n=\n \n_extends\n(\nexports\n[\n'default'\n],\n \nexports\n);\n\n\n\n\n\nJSON\n\u00b6\n\n\n{\n\n  \n\"name\"\n:\n \n\"mkdocs-material\"\n,\n\n  \n\"version\"\n:\n \n\"0.2.4\"\n,\n\n  \n\"description\"\n:\n \n\"A Material Design theme for MkDocs\"\n,\n\n  \n\"homepage\"\n:\n \n\"http://squidfunk.github.io/mkdocs-material/\"\n,\n\n  \n\"authors\"\n:\n \n[\n\n    \n\"squidfunk <martin.donath@squidfunk.com>\"\n\n  \n],\n\n  \n\"license\"\n:\n \n\"MIT\"\n,\n\n  \n\"main\"\n:\n \n\"Gulpfile.js\"\n,\n\n  \n\"scripts\"\n:\n \n{\n\n    \n\"start\"\n:\n \n\"./node_modules/.bin/gulp watch --mkdocs\"\n,\n\n    \n\"build\"\n:\n \n\"./node_modules/.bin/gulp build --production\"\n\n  \n}\n\n  \n...\n\n\n}\n\n\n\n\n\nJulia\n\u00b6\n\n\nusing\n \nMXNet\n\n\n\nmlp\n \n=\n \n@mx\n.\nchain\n \nmx\n.\nVariable\n(\n:\ndata\n)\n             \n=>\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc1\n,\n \nnum_hidden\n=\n128\n)\n \n=>\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu1\n,\n \nact_type\n=:\nrelu\n)\n   \n=>\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc2\n,\n \nnum_hidden\n=\n64\n)\n  \n=>\n\n  \nmx\n.\nActivation\n(\nname\n=:\nrelu2\n,\n \nact_type\n=:\nrelu\n)\n   \n=>\n\n  \nmx\n.\nFullyConnected\n(\nname\n=:\nfc3\n,\n \nnum_hidden\n=\n10\n)\n  \n=>\n\n  \nmx\n.\nSoftmaxOutput\n(\nname\n=:\nsoftmax\n)\n\n\n\n# data provider\n\n\nbatch_size\n \n=\n \n100\n\n\ninclude\n(\nPkg\n.\ndir\n(\n\"MXNet\"\n,\n \n\"examples\"\n,\n \n\"mnist\"\n,\n \n\"mnist-data.jl\"\n))\n\n\ntrain_provider\n,\n \neval_provider\n \n=\n \nget_mnist_providers\n(\nbatch_size\n)\n\n\n\n# setup model\n\n\nmodel\n \n=\n \nmx\n.\nFeedForward\n(\nmlp\n,\n \ncontext\n=\nmx\n.\ncpu\n())\n\n\n\n# optimization algorithm\n\n\noptimizer\n \n=\n \nmx\n.\nSGD\n(\nlr\n=\n0.1\n,\n \nmomentum\n=\n0.9\n)\n\n\n\n# fit parameters\n\n\nmx\n.\nfit\n(\nmodel\n,\n \noptimizer\n,\n \ntrain_provider\n,\n \nn_epoch\n=\n20\n,\n \neval_data\n=\neval_provider\n)\n\n\n\n\n\nLua\n\u00b6\n\n\nlocal\n \nffi\n \n=\n \nrequire\n(\n\"ffi\"\n)\n\n\n\nffi\n.\ncdef\n[[\n\n\n  void Sleep(int ms);\n\n\n  int poll(struct pollfd *fds, unsigned long nfds, int timeout);\n\n\n]]\n\n\n\nlocal\n \nsleep\n\n\nif\n \nffi\n.\nos\n \n==\n \n\"Windows\"\n \nthen\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\nSleep\n(\ns\n*\n1000\n)\n\n  \nend\n\n\nelse\n\n  \nfunction\n \nsleep\n(\ns\n)\n\n    \nffi\n.\nC\n.\npoll\n(\nnil\n,\n \n0\n,\n \ns\n \n*\n \n1000\n)\n\n  \nend\n\n\nend\n\n\n\nfor\n \ni\n \n=\n \n1\n,\n160\n \ndo\n\n  \nio.write\n(\n\".\"\n);\n \nio.flush\n()\n\n  \nsleep\n(\n0.01\n)\n\n\nend\n\n\nio.write\n(\n\"\n\\n\n\"\n)\n\n\n\n\n\nMySQL\n\u00b6\n\n\nSELECT\n\n  \nEmployees\n.\nEmployeeID\n,\n\n  \nEmployees\n.\nName\n,\n\n  \nEmployees\n.\nSalary\n,\n\n  \nManager\n.\nName\n \nAS\n \nManager\n\n\nFROM\n\n  \nEmployees\n\n\nLEFT\n \nJOIN\n\n  \nEmployees\n \nAS\n \nManager\n\n\nON\n\n  \nEmployees\n.\nManagerID\n \n=\n \nManager\n.\nEmployeeID\n\n\nWHERE\n\n  \nEmployees\n.\nEmployeeID\n \n=\n \n'087652'\n;\n\n\n\n\n\nPHP\n\u00b6\n\n\n<?php\n\n\n\n// src/AppBundle/Controller/LuckyController.php\n\n\nnamespace\n \nAppBundle\\Controller\n;\n\n\n\nuse\n \nSensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route\n;\n\n\nuse\n \nSymfony\\Component\\HttpFoundation\\Response\n;\n\n\n\nclass\n \nLuckyController\n \n{\n\n\n  \n/**\n\n\n   * @Route(\"/lucky/number\")\n\n\n   */\n\n  \npublic\n \nfunction\n \nnumberAction\n()\n \n{\n\n    \n$number\n \n=\n \nmt_rand\n(\n0\n,\n \n100\n);\n\n\n    \nreturn\n \nnew\n \nResponse\n(\n\n      \n'<html><body>Lucky number: '\n.\n$number\n.\n'</body></html>'\n\n    \n);\n\n  \n}\n\n\n}\n\n\n\n\n\nProtocol Buffers\n\u00b6\n\n\nsyntax\n \n=\n \n\"proto2\"\n;\n\n\n\npackage\n \ncaffe\n;\n\n\n\n// Specifies the shape (dimensions) of a Blob.\n\n\nmessage\n \nBlobShape\n \n{\n\n  \nrepeated\n \nint64\n \ndim\n \n=\n \n1\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n}\n\n\n\nmessage\n \nBlobProto\n \n{\n\n  \noptional\n \nBlobShape\n \nshape\n \n=\n \n7\n;\n\n  \nrepeated\n \nfloat\n \ndata\n \n=\n \n5\n \n[\npacked\n \n=\n \ntrue\n];\n\n  \nrepeated\n \nfloat\n \ndiff\n \n=\n \n6\n \n[\npacked\n \n=\n \ntrue\n];\n\n\n  \n// 4D dimensions -- deprecated.  Use \"shape\" instead.\n\n  \noptional\n \nint32\n \nnum\n \n=\n \n1\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nchannels\n \n=\n \n2\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nheight\n \n=\n \n3\n \n[\ndefault\n \n=\n \n0\n];\n\n  \noptional\n \nint32\n \nwidth\n \n=\n \n4\n \n[\ndefault\n \n=\n \n0\n];\n\n\n}\n\n\n\n\n\nPython\n\u00b6\n\n\n\"\"\"\n\n\n  A very simple MNIST classifier.\n\n\n  See extensive documentation at\n\n\n  http://tensorflow.org/tutorials/mnist/beginners/index.md\n\n\n\"\"\"\n\n\nfrom\n \n__future__\n \nimport\n \nabsolute_import\n\n\nfrom\n \n__future__\n \nimport\n \ndivision\n\n\nfrom\n \n__future__\n \nimport\n \nprint_function\n\n\n\n# Import data\n\n\nfrom\n \ntensorflow.examples.tutorials.mnist\n \nimport\n \ninput_data\n\n\n\nimport\n \ntensorflow\n \nas\n \ntf\n\n\n\nflags\n \n=\n \ntf\n.\napp\n.\nflags\n\n\nFLAGS\n \n=\n \nflags\n.\nFLAGS\n\n\nflags\n.\nDEFINE_string\n(\n'data_dir'\n,\n \n'/tmp/data/'\n,\n \n'Directory for storing data'\n)\n\n\n\nmnist\n \n=\n \ninput_data\n.\nread_data_sets\n(\nFLAGS\n.\ndata_dir\n,\n \none_hot\n=\nTrue\n)\n\n\n\nsess\n \n=\n \ntf\n.\nInteractiveSession\n()\n\n\n\n# Create the model\n\n\nx\n \n=\n \ntf\n.\nplaceholder\n(\ntf\n.\nfloat32\n,\n \n[\nNone\n,\n \n784\n])\n\n\nW\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n784\n,\n \n10\n]))\n\n\nb\n \n=\n \ntf\n.\nVariable\n(\ntf\n.\nzeros\n([\n10\n]))\n\n\ny\n \n=\n \ntf\n.\nnn\n.\nsoftmax\n(\ntf\n.\nmatmul\n(\nx\n,\n \nW\n)\n \n+\n \nb\n)\n\n\n\n\n\nRuby\n\u00b6\n\n\nrequire\n \n'finity/event'\n\n\nrequire\n \n'finity/machine'\n\n\nrequire\n \n'finity/state'\n\n\nrequire\n \n'finity/transition'\n\n\nrequire\n \n'finity/version'\n\n\n\nmodule\n \nFinity\n\n  \nclass\n \nInvalidCallback\n \n<\n \nStandardError\n;\n \nend\n\n  \nclass\n \nMissingCallback\n \n<\n \nStandardError\n;\n \nend\n\n  \nclass\n \nInvalidState\n    \n<\n \nStandardError\n;\n \nend\n\n\n  \n# Class methods to be injected into the including class upon inclusion.\n\n  \nmodule\n \nClassMethods\n\n\n    \n# Instantiate a new state machine for the including class by accepting a\n\n    \n# block with state and event (and subsequent transition) definitions.\n\n    \ndef\n \nfinity\n \noptions\n \n=\n \n{},\n \n&\nblock\n\n      \n@finity\n \n||=\n \nMachine\n.\nnew\n \nself\n,\n \noptions\n,\n \n&\nblock\n\n    \nend\n\n\n    \n# Return the names of all registered states.\n\n    \ndef\n \nstates\n\n      \n@finity\n.\nstates\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n\n    \n# Return the names of all registered events.\n\n    \ndef\n \nevents\n\n      \n@finity\n.\nevents\n.\nmap\n \n{\n \n|\nname\n,\n \n_\n|\n \nname\n \n}\n\n    \nend\n\n  \nend\n\n\n  \n# Inject methods into the including class upon inclusion.\n\n  \ndef\n \nself\n.\nincluded\n \nbase\n\n    \nbase\n.\nextend\n \nClassMethods\n\n  \nend\n\n\nend\n\n\n\n\n\nXML\n\u00b6\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n<!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]>\n\n\n<?oxygen RNGSchema=\"some.rng\" type=\"xml\"?>\n\n\n<xs:main-Tag\n \nxmlns:xs=\n\"http://www.w3.org/2001/XMLSchema\"\n>\n\n  \n<!-- This is a sample comment -->\n\n  \n<childTag\n \nattribute=\n\"Quoted Value\"\n \nanother-attribute=\n'Single quoted value'\n\n      \na-third-attribute=\n'123'\n>\n\n    \n<withTextContent>\nSome text content\n</withTextContent>\n\n    \n<withEntityContent>\nSome text content with \n&lt;\nentities\n&gt;\n and\n      mentioning uint8_t and int32_t\n</withEntityContent>\n\n    \n<otherTag\n \nattribute=\n'Single quoted Value'\n/>\n\n  \n</childTag>\n\n  \n<![CDATA[ some CData ]]>\n\n\n</main-Tag>\n\n\n\n\n\nFootnotes\n\u00b6\n\n\nFootnotes\n is another extension included in the standard Markdown library.\nAs the name says, it adds the ability to add footnotes to your documentation.\n\n\nInstallation\n\u00b6\n\n\nAdd the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nfootnotes\n\n\n\n\n\nUsage\n\u00b6\n\n\nThe markup for footnotes is similar to the standard Markdown markup for links.\nA reference is inserted in the text, which can then be defined at any point in\nthe document.\n\n\nInserting the reference\n\u00b6\n\n\nThe footnote reference is enclosed in square brackets and starts with a caret,\nfollowed by an arbitrary label which may contain numeric identifiers [1, 2, 3,\n...] or names [Granovetter et al. 1998]. The rendered references are always\nconsecutive superscripted numbers.\n\n\nExample:\n\n\nLorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n\n\n\n\nResult:\n\n\nLorem ipsum\n1\n dolor sit amet, consectetur adipiscing elit.\n2\n\n\nInserting the content\n\u00b6\n\n\nThe footnote content is also declared with a label, which must match the label\nused for the footnote reference. It can be inserted at an arbitrary position in\nthe document and is always rendered at the bottom of the page. Furthermore, a\nbacklink is automatically added to the footnote reference.\n\n\non a single line\n\u00b6\n\n\nShort statements can be written on the same line.\n\n\nExample:\n\n\n[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n\n\nResult:\n\n\nJump to footnote at the bottom of the page\n\n\non multiple lines\n\u00b6\n\n\nParagraphs should be written on the next line. As with all Markdown blocks, the\ncontent must be indented by four spaces.\n\n\nExample:\n\n\n[^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n\n\n\nResult:\n\n\nJump to footnote at the bottom of the page\n\n\npath: tree/master/docs/extensions\nsource: metadata.md\n\n\nMetadata\n\u00b6\n\n\nThe \nMetadata\n extension makes it possible to add metadata to a document\nwhich gives more control over the theme in a page-specific context.\n\n\nInstallation\n\u00b6\n\n\nAdd the following lines to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nmeta\n\n\n\n\n\nUsage\n\u00b6\n\n\nMetadata is written as a series of key-value pairs at the beginning of the\nMarkdown document, delimited by a blank line which ends the metadata context.\nNaturally, the metadata is stripped from the document before rendering the\nactual page content and made available to the theme.\n\n\nExample:\n\n\ntitle: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n# Headline\n\n...\n\n\n\n\nSee the next section which covers the metadata that is supported by Material.\n\n\nOverriding the title\n\u00b6\n\n\nThe page title can be overridden on a per-document level:\n\n\ntitle: Lorem ipsum dolor sit amet\n\n\n\n\nThis will set the \ntitle\n tag inside the document \nhead\n for the current page\nto the provided value. It will also override the default behavior of Material\nfor MkDocs which appends the site title using a dash as a separator to the page\ntitle.\n\n\nOverriding the description\n\u00b6\n\n\nThe page description can also be overridden on a per-document level:\n\n\ndescription\n:\n \nNullam urna elit, malesuada eget finibus ut, ac tortor.\n\n\n\n\n\nThis will set the \nmeta\n tag containing the site description inside the\ndocument \nhead\n for the current page to the provided value.\n\n\nLinking sources\n\u00b6\n\n\nWhen a document is related to a specific set of source files and the \nrepo_url\n\nis defined inside the project's \nmkdocs.yml\n, the files can be linked using the\n\nsource\n key:\n\n\nsource: file.js\n\n\n\n\nA new entry at the bottom of the table of contents is generated that is linking\nto the section listing the linked source files. Multiple files can be linked by\nadding filenames on separate lines:\n\n\nsource: file.js\n        file.css\n\n\n\n\nThe filenames are appended to the \nrepo_url\n set in your \nmkdocs.yml\n, but can\nbe prefixed with a \npath\n to ensure correct path resolving:\n\n\nExample:\n\n\npath: tree/master/docs/extensions\nsource: metadata.md\n\n\n\n\nResult:\n\n\nSee the \nsource\n section for the resulting output.\n\n\nPermalinks\n\u00b6\n\n\nPermalinks are a feature of the \nTable of Contents\n extension, which is part\nof the standard Markdown library. The extension inserts an anchor at the end of\neach headline, which makes it possible to directly link to a subpart of the\ndocument.\n\n\nInstallation\n\u00b6\n\n\nTo enable permalinks, add the following to your \nmkdocs.yml\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc(permalink=true)\n\n\n\n\n\nThis will add a link containing the paragraph symbol \n\u00b6\n at the end of each\nheadline (exactly like on the page you're currently viewing), which the\nMaterial theme will make appear on hover. In order to change the text of the\npermalink, a string can be passed, e.g.:\n\n\nmarkdown_extensions:\n  - toc(permalink=Link)\n\n\n\n\nUsage\n\u00b6\n\n\nWhen enabled, permalinks are inserted automatically.\n\n\nPyMdown Extensions\n\u00b6\n\n\nPyMdown Extensions\n is a collection of Markdown extensions that add some\ngreat features to the standard Markdown library. For this reason, the\n\ninstallation of this package is highly recommended\n as it's well-integrated\nwith the Material theme.\n\n\nInstallation\n\u00b6\n\n\nThe PyMdown Extensions package can be installed with the following command:\n\n\npip install pymdown-extensions\n\n\n\n\nThe following list of extensions that are part of the PyMdown Extensions\npackage are recommended to be used together with the Material theme:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \npymdownx.arithmatex\n\n  \n-\n \npymdownx.betterem(smart_enable=all)\n\n  \n-\n \npymdownx.caret\n\n  \n-\n \npymdownx.critic\n\n  \n-\n \npymdownx.emoji\n:\n\n      \nemoji_generator\n:\n \n!!python/name:pymdownx.emoji.to_svg\n\n  \n-\n \npymdownx.inlinehilite\n\n  \n-\n \npymdownx.magiclink\n\n  \n-\n \npymdownx.mark\n\n  \n-\n \npymdownx.smartsymbols\n\n  \n-\n \npymdownx.superfences\n\n  \n-\n \npymdownx.tasklist(custom_checkbox=true)\n\n  \n-\n \npymdownx.tilde\n\n\n\n\n\nUsage\n\u00b6\n\n\nGitHub Flavored Markdown\n\u00b6\n\n\nMost of the extensions included in the PyMdown Extensions package try to bring\nthe Markdown experience closer to GitHub Flavored Markdown (GFM).\n\n\nThe PyMdown Extensions package adds a shorthand to enable all of the included\nextensions that provide the GFM experience. However, usage of the shorthand is\ndiscouraged, because some extensions are not supported, as the Material theme\nuses some incompatible extensions included in the standard Markdown library.\n\n\nBetterEm\n\u00b6\n\n\nBetterEm\n improves the handling of emphasis markup (\nbold\n and \nitalic\n)\nwithin Markdown by providing a more sophisticated parser for better detecting\nstart and end tokens. Read the documentation for \nusage notes\n.\n\n\nEmoji\n\u00b6\n\n\nEmoji\n adds the ability to insert a \n-load of emojis that we use in\nour daily lives. See the \nEmojiOne demo\n for a list of all available\nemojis. Happy scrolling \n\n\n\n\nLegal disclaimer\n\n\nMaterial has no affiliation with \nEmojiOne\n which is released under\n\nCC BY 4.0\n. When including EmojiOne images or CSS, please read the\n\nEmojiOne license\n to ensure proper usage and attribution.\n\n\n\n\nMagicLink\n\u00b6\n\n\nMagicLink\n detects links in Markdown and auto-generates the necessary\nmarkup, so no special syntax is required. It auto-links \nhttp[s]://\n and\n\nftp://\n links, as well as references to email addresses:\n\n\nSuperFences\n\u00b6\n\n\nSuperFences\n provides the ability to nest code blocks under blockquotes,\nlists and other block elements, which the \nFenced Code Blocks\n extension\nfrom the standard Markdown library doesn't parse correctly.\n\n\nTasklist\n\u00b6\n\n\nTasklist\n adds support for styled checkbox lists. This is useful for\nkeeping track of tasks and showing what has been done and has yet to be done.\nCheckbox lists are like regular lists, but prefixed with \n[ ]\n for empty or\n\n[x]\n for filled checkboxes.\n\n\nExample:\n\n\n* [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\nResult:\n\n\n\n\n Lorem ipsum dolor sit amet, consectetur adipiscing elit\n\n\n Nulla lobortis egestas semper\n\n\n Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n\n\n Vestibulum convallis sit amet nisi a tincidunt\n\n\n In hac habitasse platea dictumst\n\n\n In scelerisque nibh non dolor mollis congue sed et metus\n\n\n Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n\n\n Praesent sed risus massa\n\n\n\n\n\n\n Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n\n\n Nulla vel eros venenatis, imperdiet enim id, faucibus nisi\n\n\n\n\nTilde\n\u00b6\n\n\nTilde\n provides an easy way to \nstrike through\n cross out\u00a0text.\nThe portion of text that should be erased must be enclosed in two tildes\n\n~~...~~\n and the extension will take care of the rest.\n\n\nMore syntactic sugar\n\u00b6\n\n\nCaret\n\u00b6\n\n\nCaret\n is the sister extension of \nTilde\n and makes it possible to\nhighlight \ninserted text\n. The portion of text that should be marked as added\nmust be enclosed in two carets \n^^...^^\n.\n\n\nMark\n\u00b6\n\n\nMark\n adds the ability to \nhighlight text\n like it was marked with a\n\nyellow text marker\n. The portion of text that should be highlighted must be\nenclosed in two equal signs \n==...==\n.\n\n\nSmartSymbols\n\u00b6\n\n\nSmartSymbols\n converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright\nsymbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).\n\n\nCritic\n\u00b6\n\n\nCritic\n implements \nCritic Markup\n, a Markdown extension that enables\nthe tracking of changes (additions, deletions and comments) on documents.\nDuring compilation of the Markdown document, changes can be rendered (default),\naccepted or rejected.\n\n\nText can be \ndeleted\n and replacement text \nadded\n. This can also be\ncombined into \none\na single\n operation. \nHighlighting\n is also\npossible \nand comments can be added inline\n.\n\n\n\n\nFormatting can also be applied to blocks, by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.\n\n\n\n\nArithmatex \nMathJax\n\u00b6\n\n\n\n\n\nArithmatex\n integrates Material with \nMathJax\n which parses\nblock-style and inline equations written in TeX markup and outputs them in\nmathematical notation. See \nthis thread\n for a short introduction and quick\nreference on how to write equations in TeX syntax.\n\n\nBesides activating the extension in the \nmkdocs.yml\n, the MathJax JavaScript\nruntime needs to be included. This must be done with\n\nadditional JavaScript\n:\n\n\nextra_javascript\n:\n\n  \n-\n \n'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'\n\n\n\n\n\nIf you want to override the default MathJax configuration, you can do this by\nadding another JavaScript file \nbefore\n the MathJax runtime in\n\nextra_javascript\n which contains your MathJax configuration, e.g.:\n\n\nwindow\n.\nMathJax\n \n=\n \n{\n\n  \ntex2jax\n:\n \n{\n\n    \ninlineMath\n:\n \n[\n \n[\n\"\\\\(\"\n,\n\"\\\\)\"\n]\n \n],\n\n    \ndisplayMath\n:\n \n[\n \n[\n\"\\\\[\"\n,\n\"\\\\]\"\n]\n \n]\n\n  \n},\n\n  \nTeX\n:\n \n{\n\n    \nTagSide\n:\n \n\"right\"\n,\n\n    \nTagIndent\n:\n \n\".8em\"\n,\n\n    \nMultLineWidth\n:\n \n\"85%\"\n,\n\n    \nequationNumbers\n:\n \n{\n\n      \nautoNumber\n:\n \n\"AMS\"\n,\n\n    \n},\n\n    \nunicode\n:\n \n{\n\n      \nfonts\n:\n \n\"STIXGeneral,'Arial Unicode MS'\"\n\n    \n}\n\n  \n},\n\n  \ndisplayAlign\n:\n \n\"left\"\n,\n\n  \nshowProcessingMessages\n:\n \nfalse\n,\n\n  \nmessageStyle\n:\n \n\"none\"\n\n\n};\n\n\n\n\n\nIn your \nmkdocs.yml\n, include it with:\n\n\nextra_javascript\n:\n\n  \n-\n \n'javascripts/extra.js'\n\n  \n-\n \n'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'\n\n\n\n\n\nBlocks\n\u00b6\n\n\nBlocks are enclosed in \n$$\n...\n$$\n which are placed on separate lines.\n\n\nExample:\n\n\n$$\n\n\n\\frac\n{n\n!\n}{k\n!(\nn\n-\nk\n)!\n} \n=\n \n\\binom\n{n}{k}\n\n\n$$\n\n\n\n\n\nResult:\n\n\n\\[\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n\\]\nInline\n\u00b6\n\n\nInline equations need to be enclosed in \n$\n...\n$\n:\n\n\nExample:\n\n\nLorem ipsum dolor sit amet: \n$\np\n(\nx|y\n)\n \n=\n \n\\frac\n{p\n(\ny|x\n)\np\n(\nx\n)\n}{p\n(\ny\n)\n}\n$\n\n\n\n\n\nResult:\n\n\nLorem ipsum dolor sit amet: \n\\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)\n\n\nInlineHilite\n\u00b6\n\n\nInlineHilite\n adds support for inline code highlighting. It's useful for\nshort snippets included within body copy, e.g. \nvar\n \ntest\n \n=\n \n0\n;\n and can be\nachived by prefixing inline code with a shebang and language identifier,\ne.g. \n#!js\n.\n\n\n\n\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\n\u21a9\n\n\n\n\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n  nulla. Curabitur feugiat, tortor non consequat finibus, justo purus\n  auctor massa, nec semper lorem quam in massa.\u00a0\n\u21a9",
            "title": "Documentation"
        },
        {
            "location": "/documentation/#theme-documentation",
            "text": "",
            "title": "Theme Documentation"
        },
        {
            "location": "/documentation/#blockquotes",
            "text": "Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum.\n  Pellentesque aliquet quam enim, eu volutpat urna rutrum a.",
            "title": "Blockquotes"
        },
        {
            "location": "/documentation/#blockquote-nesting",
            "text": "Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae\n  faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem\n   libero fermentum  urna, ut efficitur elit ligula et nunc.   Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla.\n    Ut sit amet placerat ante.   Suspendisse rutrum facilisis risus , eu posuere neque commodo a.\n      Interdum et malesuada fames ac ante ipsum primis in faucibus.",
            "title": "Blockquote nesting"
        },
        {
            "location": "/documentation/#other-content-blocks",
            "text": "Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu\n  lectus dapibus, eleifend nulla varius, lobortis turpis.\n   var   _extends   =   function ( target )   { \n   for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   }     return   target ;  };    Praesent at  return   target , sodales nibh vel, tempor felis. Fusce\n      vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices.\n      Donec consectetur mauris non neque imperdiet, eget volutpat libero.",
            "title": "Other content blocks"
        },
        {
            "location": "/documentation/#lists",
            "text": "",
            "title": "Lists"
        },
        {
            "location": "/documentation/#unordered-lists",
            "text": "Sed sagittis eleifend rutrum.  Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.  Nam vulputate tincidunt fringilla.  Nullam dignissim ultrices urna non auctor.    Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex.  Nulla et rhoncus turpis.",
            "title": "Unordered lists"
        },
        {
            "location": "/documentation/#ordered-lists",
            "text": "Integer vehicula feugiat magna, a mollis tellus.     Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n  ridiculus mus.    Vivamus venenatis porttitor tortor sit amet rutrum.    Mauris dictum mi lacus  Ut sit amet placerat ante  Suspendisse ac eros arcu     Morbi eget dapibus felis.     Pellentesque eget  var   _extends  ornare tellus, ut gravida mi. var   _extends   =   function ( target )   {     for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n   return   target ;  };       Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n  sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n  nulla. Vivamus a pharetra leo.",
            "title": "Ordered lists"
        },
        {
            "location": "/documentation/#definition-lists",
            "text": "Lorem ipsum dolor sit amet   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\ntellus non sem sollicitudin, quis rutrum leo facilisis.  Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\nNam vulputate tincidunt fringilla.   Cras arcu libero   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\nut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at\naliquam ac, aliquet sed mauris.",
            "title": "Definition lists"
        },
        {
            "location": "/documentation/#code-blocks",
            "text": "",
            "title": "Code blocks"
        },
        {
            "location": "/documentation/#inline",
            "text": "Morbi eget  dapibus felis . Vivamus  venenatis porttitor  tortor sit amet\nrutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\nper inceptos himenaeos.  Pellentesque aliquet quam enim , eu volutpat urna\nrutrum a.  Nam vehicula nunc  return   target  mauris, a ultricies libero efficitur\nsed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque\neget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.",
            "title": "Inline"
        },
        {
            "location": "/documentation/#listing",
            "text": "1\n2\n3\n4\n5\n6\n7\n8\n9 var   _extends   =   function ( target )   { \n   for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   }     return   target ;  };",
            "title": "Listing"
        },
        {
            "location": "/documentation/#horizontal-rules",
            "text": "",
            "title": "Horizontal rules"
        },
        {
            "location": "/documentation/#data-tables",
            "text": "Sollicitudo / Pellentesi  consectetur  adipiscing      Vivamus a pharetra  yes  yes    Ornare viverra ex  yes  yes    Mauris a ullamcorper  yes  yes    Nullam urna elit  yes  yes    Malesuada eget finibus  yes  yes",
            "title": "Data tables"
        },
        {
            "location": "/documentation/#admonition",
            "text": "Admonition  is an extension included in the standard Markdown library that\nmakes it possible to add block-styled side content to your documentation, for\nexample summaries, notes, hints or warnings.   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Admonition"
        },
        {
            "location": "/documentation/#changing-the-title",
            "text": "Phasellus posuere in sem ut cursus  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Changing the title"
        },
        {
            "location": "/documentation/#removing-the-title",
            "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.",
            "title": "Removing the title"
        },
        {
            "location": "/documentation/#embedded-code-blocks",
            "text": "Blocks can contain all kinds of text content, including headlines, lists,\nparagraphs and other blocks \u2013 except code blocks, because the parser from the\nstandard Markdown library does not account for those.  However, the  PyMdown Extensions  package adds an extension called SuperFences , which makes it possible to nest code blocks within other\nblocks.  Example:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.  SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   '087652' ;   Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in\nsem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis.\nEtiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.",
            "title": "Embedded code blocks"
        },
        {
            "location": "/documentation/#types",
            "text": "Admonition supports user-defined type qualifiers which may influence the style\nof the inserted block. Following is a list of type qualifiers supported by the\nMaterial theme, whereas the default type, and thus fallback for unknown type\nqualifiers, is  note .",
            "title": "Types"
        },
        {
            "location": "/documentation/#note",
            "text": "Example:  !!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Note  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   note  seealso",
            "title": "Note"
        },
        {
            "location": "/documentation/#summary",
            "text": "Example:  !!! summary\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Summary  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   summary  tldr",
            "title": "Summary"
        },
        {
            "location": "/documentation/#tip",
            "text": "Example:  !!! tip\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Tip  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   tip  hint  important",
            "title": "Tip"
        },
        {
            "location": "/documentation/#success",
            "text": "Example:  !!! success\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Success  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   success  check  done",
            "title": "Success"
        },
        {
            "location": "/documentation/#warning",
            "text": "Example:  !!! warning\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Warning  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   warning  caution  attention",
            "title": "Warning"
        },
        {
            "location": "/documentation/#failure",
            "text": "Example:  !!! failure\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Failure  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   failure  fail  missing",
            "title": "Failure"
        },
        {
            "location": "/documentation/#danger",
            "text": "Example:  !!! danger\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Danger  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   danger  error",
            "title": "Danger"
        },
        {
            "location": "/documentation/#bug",
            "text": "Example:  !!! bug\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Bug  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   bug",
            "title": "Bug"
        },
        {
            "location": "/documentation/#quote",
            "text": "Example:  !!! quote\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:   Quote  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.   Qualifiers:   quote  cite",
            "title": "Quote"
        },
        {
            "location": "/documentation/#codehilite",
            "text": "CodeHilite  is an extension that adds syntax highlighting to code blocks\nand is included in the standard Markdown library. The highlighting process is\nexecuted during compilation of the Markdown file.   Syntax highlighting not working?  Please ensure that  Pygments  is installed. See the next section for\nfurther directions on how to set up Pygments or use the official Docker image  with all dependencies pre-installed.",
            "title": "CodeHilite"
        },
        {
            "location": "/documentation/#installation",
            "text": "CodeHilite parses code blocks and wraps them in  pre  tags. If  Pygments \nis installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can\nbe installed with the following command:  pip install pygments  To enable CodeHilite, add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   codehilite    Migrating from Material 0.2.x  In 0.2.x the CodeHilite extension was included with codehilite(css_class=code)  which switched the CSS class from .codehilite  to  .code . The current version of the theme doesn't require\nthat and defines styles for the default  .codehilite  class, so the part css_class=code  needs to be removed.",
            "title": "Installation"
        },
        {
            "location": "/documentation/#usage",
            "text": "",
            "title": "Usage"
        },
        {
            "location": "/documentation/#specifying-the-language",
            "text": "The CodeHilite extension uses the same syntax as regular Markdown code blocks,\nbut needs to know the language of the code block. This can be done in three\ndifferent ways.",
            "title": "Specifying the language"
        },
        {
            "location": "/documentation/#via-markdown-syntax-recommended",
            "text": "In Markdown, code blocks can be opened and closed by writing three backticks on\nseparate lines. To add code highlighting to those blocks, the easiest way is\nto specify the language directly after the opening block.  Example:  ``` python\nimport tensorflow as tf\n```  Result:  import   tensorflow   as   tf",
            "title": "via Markdown syntax recommended"
        },
        {
            "location": "/documentation/#via-shebang",
            "text": "Alternatively, if the first line of a code block contains a shebang, the\nlanguage is derived from the path referenced in the shebang. This will only\nwork for code blocks that are indented using four spaces, not for those\nencapsulated in three backticks.  Example:      #!/usr/bin/python\n    import tensorflow as tf  Result:  #!/usr/bin/python  import   tensorflow   as   tf",
            "title": "via Shebang"
        },
        {
            "location": "/documentation/#via-three-colons",
            "text": "If the first line starts with three colons followed by a language identifier,\nthe first line is stripped. This will only work for code blocks that are\nindented using four spaces, not for those encapsulated in three backticks.  Example:      :::python\n    import tensorflow as tf  Result:  import   tensorflow   as   tf",
            "title": "via three colons"
        },
        {
            "location": "/documentation/#adding-line-numbers",
            "text": "Line numbers can be added by enabling the  linenums  flag in your  mkdocs.yml :  markdown_extensions : \n   -   codehilite(linenums=true)   Example:  ``` python\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```  Result:  1\n2\n3\n4\n5\n6 \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ): \n     for   i   in   range ( len ( items )): \n         for   j   in   range ( len ( items )   -   1   -   i ): \n             if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]",
            "title": "Adding line numbers"
        },
        {
            "location": "/documentation/#highlighting-specific-lines",
            "text": "Specific lines can be highlighted by passing the line numbers to the  hl_lines \nargument placed right after the language identifier. Line counts start at 1.  Example:  ``` python hl_lines=\"3 4\"\n\"\"\" Bubble sort \"\"\"\ndef bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] > items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n```  Result:  1\n2\n3\n4\n5\n6 \"\"\" Bubble sort \"\"\"  def   bubble_sort ( items ):       for   i   in   range ( len ( items )):           for   j   in   range ( len ( items )   -   1   -   i ):               if   items [ j ]   >   items [ j   +   1 ]: \n                 items [ j ],   items [ j   +   1 ]   =   items [ j   +   1 ],   items [ j ]",
            "title": "Highlighting specific lines"
        },
        {
            "location": "/documentation/#supported-languages-excerpt",
            "text": "CodeHilite uses  Pygments , a generic syntax highlighter with support for\nover  300 languages , so the following list of examples is just an excerpt.",
            "title": "Supported languages excerpt"
        },
        {
            "location": "/documentation/#bash",
            "text": "#!/bin/bash  for  OPT in  \" $@ \"  do \n   case   \" $OPT \"  in\n     '-f'   )    canonicalize = 1   ;; \n     '-n'   )    switchlf = \"-n\"   ;; \n   esac  done  # readlink -f  function  __readlink_f  { \n   target = \" $1 \" \n   while   test  -n  \" $target \" ;   do \n     filepath = \" $target \" \n     cd   ` dirname  \" $filepath \" ` \n     target = ` readlink  \" $filepath \" ` \n   done \n  /bin/echo  $switchlf   ` pwd  -P ` / ` basename  \" $filepath \" `  }  if   [  !  \" $canonicalize \"   ] ;   then \n  readlink  $switchlf   \" $@ \"  else \n   for  file in  \" $@ \" \n   do \n     case   \" $file \"  in\n      -*  )    ;; \n      *   )   __readlink_f  \" $file \"   ;; \n     esac \n     done  fi  exit   $?",
            "title": "Bash"
        },
        {
            "location": "/documentation/#c",
            "text": "extern   size_t  pb_varint_scan ( const   uint8_t   data [],   size_t   left )   { \n   assert ( data   &&   left ); \n   left   =   left   >   10   ?   10   :   left ;  #ifdef __SSE2__ \n\n   /* Mapping: remaining bytes ==> bitmask */ \n   static   const   int   mask_map []   =   { \n     0x0000 ,   0x0001 ,   0x0003 ,   0x0007 , \n     0x000F ,   0x001F ,   0x003F ,   0x007F , \n     0x00FF ,   0x01FF ,   0x03FF \n   }; \n\n   /* Load buffer into 128-bit integer and create high-bit mask */ \n   __m128i   temp   =   _mm_loadu_si128 (( const   __m128i   * ) data ); \n   __m128i   high   =   _mm_set1_epi8 ( 0x80 ); \n\n   /* Intersect and extract mask with high-bits set */ \n   int   mask   =   _mm_movemask_epi8 ( _mm_and_si128 ( temp ,   high )); \n   mask   =   ( mask   &   mask_map [ left ])   ^   mask_map [ left ]; \n\n   /* Count trailing zeroes */ \n   return   mask   ?   __builtin_ctz ( mask )   +   1   :   0 ;  #else \n\n   /* Linear scan */ \n   size_t   size   =   0 ; \n   while   ( data [ size ++ ]   &   0x80 ) \n     if   ( !-- left ) \n       return   0 ; \n   return   size ;  #endif  /* __SSE2__ */  }",
            "title": "C"
        },
        {
            "location": "/documentation/#c_1",
            "text": "Extension ::  Extension ( const   Descriptor   * descriptor ,   const   Descriptor   * scope )   : \n     descriptor_ ( descriptor ), \n     scope_ ( scope )   { \n\n   /* Extract full name for signature */ \n   variables_ [ \"signature\" ]   =   descriptor_ -> full_name (); \n\n   /* Prepare message symbol */ \n   variables_ [ \"message\" ]   =   StringReplace ( \n     variables_ [ \"signature\" ],   \".\" ,   \"_\" ,   true ); \n   LowerString ( & ( variables_ [ \"message\" ])); \n\n   /* Suffix scope to identifiers, if given */ \n   string   suffix   ( \"\" ); \n   if   ( scope_ )   { \n     suffix   =   scope_ -> full_name (); \n\n     /* Check if the base and extension types are in the same package */ \n     if   ( ! scope_ -> file () -> package (). compare ( descriptor_ -> file () -> package ())) \n       suffix   =   StripPrefixString ( suffix , \n         scope_ -> file () -> package ()   +   \".\" ); \n\n     /* Append to signature */ \n     variables_ [ \"signature\" ]   +=   \".[\"   +   suffix   + \"]\" ; \n     suffix   =   \"_\"   +   suffix ; \n   } \n\n   /* Prepare extension symbol */ \n   variables_ [ \"extension\" ]   =   StringReplace ( \n     suffix ,   \".\" ,   \"_\" ,   true ); \n   LowerString ( & ( variables_ [ \"extension\" ]));  }",
            "title": "C++"
        },
        {
            "location": "/documentation/#c_2",
            "text": "public   static   void   Send ( \n     Socket   socket ,   byte []   buffer ,   int   offset ,   int   size ,   int   timeout )   { \n   int   startTickCount   =   Environment . TickCount ; \n   int   sent   =   0 ; \n   do   { \n     if   ( Environment . TickCount   >   startTickCount   +   timeout ) \n       throw   new   Exception ( \"Timeout.\" ); \n     try   { \n       sent   +=   socket . Send ( buffer ,   offset   +   sent , \n         size   -   sent ,   SocketFlags . None ); \n     }   catch   ( SocketException   ex )   { \n       if   ( ex . SocketErrorCode   ==   SocketError . WouldBlock   || \n           ex . SocketErrorCode   ==   SocketError . IOPending   || \n           ex . SocketErrorCode   ==   SocketError . NoBufferSpaceAvailable )   { \n         /* Socket buffer is probably full, wait and try again */ \n         Thread . Sleep ( 30 ); \n       }   else   { \n         throw   ex ; \n       } \n     } \n   }   while   ( sent   <   size );  }",
            "title": "C&#35;"
        },
        {
            "location": "/documentation/#clojure",
            "text": "( clojure-version )  ( defn  partition-when \n   [ f ] \n   ( fn  [ rf ] \n     ( let  [ a   ( java.util.ArrayList. ) \n           fval   ( volatile!   false )] \n       ( fn \n         ([]   ( rf )) \n         ([ result ] \n            ( let  [ result   ( if  ( .isEmpty   a ) \n                           result \n                           ( let  [ v   ( vec   ( .toArray   a ))] \n                             ;; Clear first \n                             ( .clear   a ) \n                             ( unreduced   ( rf   result   v ))))] \n              ( rf   result ))) \n         ([ result   input ] \n             ( if-not  ( and  ( f   input )    @ fval ) \n                ( do \n                  ( vreset!   fval   true ) \n                  ( .add   a   input ) \n                  result ) \n                ( let  [ v   ( vec   ( .toArray   a ))] \n                  ( .clear   a ) \n                  ( let  [ ret   ( rf   result   v )] \n                    ( when-not  ( reduced?   ret ) \n                      ( .add   a   input )) \n                    ret ))))))))  ( into  []   ( partition-when \n           # ( .startsWith   %   \">>\" )) \n           [ \"1d\"   \"33\"   \">> 1\"   \">> 2\"   \"22\"   \">> 3\" ])",
            "title": "Clojure"
        },
        {
            "location": "/documentation/#diff",
            "text": "Index: grunt.js  ===================================================================  --- grunt.js    (revision 31200)  +++ grunt.js    (working copy)  @@ -12,6 +12,7 @@ \n\n module.exports = function (grunt) { +  console.log('hello world'); \n   // Project configuration.\n   grunt.initConfig({\n     lint: { @@ -19,10 +20,6 @@ \n         'packages/services.web/{!(test)/**/,}*.js',\n         'packages/error/**/*.js'\n       ], -      scripts: [  -        'grunt.js',  -        'db/**/*.js'  -      ], \n       browser: [\n         'packages/web/server.js',\n         'packages/web/server/**/*.js',",
            "title": "Diff"
        },
        {
            "location": "/documentation/#docker",
            "text": "FROM  ubuntu  # Install vnc, xvfb in order to create a 'fake' display and firefox  RUN  apt-get update  &&  apt-get install -y x11vnc xvfb firefox RUN  mkdir ~/.vnc # Setup a password  RUN  x11vnc -storepasswd  1234  ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick)  RUN  bash -c  'echo \"firefox\" >> /.bashrc'  EXPOSE  5900  CMD  [\"x11vnc\", \"-forever\", \"-usepw\", \"-create\"]",
            "title": "Docker"
        },
        {
            "location": "/documentation/#elixir",
            "text": "require   Logger  def   accept ( port )   do \n   { :ok ,   socket }   =   :gen_tcp . listen ( port , \n                     [ :binary ,   packet :   :line ,   active :   false ,   reuseaddr :   true ]) \n   Logger . info   \"Accepting connections on port  #{ port } \" \n   loop_acceptor ( socket )  end  defp   loop_acceptor ( socket )   do \n   { :ok ,   client }   =   :gen_tcp . accept ( socket ) \n   serve ( client ) \n   loop_acceptor ( socket )  end  defp   serve ( socket )   do \n   socket \n   |>   read_line () \n   |>   write_line ( socket ) \n\n   serve ( socket )  end  defp   read_line ( socket )   do \n   { :ok ,   data }   =   :gen_tcp . recv ( socket ,   0 ) \n   data  end  defp   write_line ( line ,   socket )   do \n   :gen_tcp . send ( socket ,   line )  end",
            "title": "Elixir"
        },
        {
            "location": "/documentation/#erlang",
            "text": "circular ( Defs )   -> \n   [   {   {   Type ,   Base   },   Fields   }   || \n     {   {   Type ,   Base   },   Fields   }   <-   Defs ,   Type   ==   msg ,   circular ( Base ,   Defs )   ].  circular ( Base ,   Defs )   -> \n   Fields   =   proplists : get_value ({   msg ,   Base   },   Defs ), \n   circular ( Defs ,   Fields ,   [ Base ]).  circular (_ Defs ,   [],   _ Path )   -> \n   false ;  circular ( Defs ,   [ Field   |   Fields ],   Path )   -> \n   case   Field #field.type   of \n     {   msg ,   Type   }   -> \n       case   lists : member ( Type ,   Path )   of \n         false   -> \n           Children   =   proplists : get_value ({   msg ,   Type   },   Defs ), \n           case   circular ( Defs ,   Children ,   [ Type   |   Path ])   of \n             false   ->   circular ( Defs ,   Fields ,   Path ); \n             true    ->   true \n           end ; \n         true   -> \n           Type   ==   lists : last ( Path )   andalso \n             ( length ( Path )   ==   1   orelse   not   is_tree ( Path )) \n       end ; \n     _   -> \n       circular ( Defs ,   Fields ,   Path ) \n   end .",
            "title": "Erlang"
        },
        {
            "location": "/documentation/#f",
            "text": "/// Asynchronously download retangles from the server  /// and decode the JSON format to F# Rectangle record  let   [< Js >]   getRectangles   ()   :   Async < Rectangle [] >   =   async   { \n   let   req   =   XMLHttpRequest () \n   req . Open ( \"POST\" ,   \"/get\" ,   true ) \n   let!   resp   =   req . AsyncSend () \n   return   JSON . parse ( resp )   }  /// Repeatedly update rectangles after 0.5 sec  let   [< Js >]   updateLoop   ()   =   async   { \n   while   true   do \n     do !   Async . Sleep ( 500 ) \n     let!   rects   =   getRectangles () \n     cleanRectangles () \n     rects   |>   Array . iter   createRectangle   }",
            "title": "F&#35;"
        },
        {
            "location": "/documentation/#go",
            "text": "package   main  import   \"fmt\"  func   counter ( id   int ,   channel   chan   int ,   closer   bool )   { \n   for   i   :=   0 ;   i   <   10000000 ;   i ++   { \n     fmt . Println ( \"process\" ,   id , \" send\" ,   i ) \n     channel   <-   1 \n   } \n   if   closer   {   close ( channel   )   }  }  func   main ()   { \n   channel   :=   make ( chan   int ) \n   go   counter ( 1 ,   channel ,   false ) \n   go   counter ( 2 ,   channel ,   true ) \n\n   x   :=   0 \n\n   // receiving data from channel \n   for   i   :=   range   channel   { \n     fmt . Println ( \"receiving\" ) \n     x   +=   i \n   } \n\n   fmt . Println ( x )  }",
            "title": "Go"
        },
        {
            "location": "/documentation/#html",
            "text": "<!doctype html>  < html   class = \"no-js\"   lang = \"\" > \n   < head > \n     < meta   charset = \"utf-8\" > \n     < meta   http-equiv = \"x-ua-compatible\"   content = \"ie=edge\" > \n     < title > HTML5 Boilerplate </ title > \n     < meta   name = \"description\"   content = \"\" > \n     < meta   name = \"viewport\"   content = \"width=device-width, initial-scale=1\" > \n\n     < link   rel = \"apple-touch-icon\"   href = \"apple-touch-icon.png\" > \n     < link   rel = \"stylesheet\"   href = \"css/normalize.css\" > \n     < link   rel = \"stylesheet\"   href = \"css/main.css\" > \n     < script   src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > \n   </ head > \n   < body > \n     < p > Hello world! This is HTML5 Boilerplate. </ p > \n   </ body >  </ html >",
            "title": "HTML"
        },
        {
            "location": "/documentation/#java",
            "text": "import   java.util.LinkedList ;  import   java.lang.reflect.Array ;  public   class   UnsortedHashSet < E >   { \n\n   private   static   final   double   LOAD_FACTOR_LIMIT   =   0.7 ; \n\n   private   int   size ; \n   private   LinkedList < E >[]   con ; \n\n   public   UnsortedHashSet ()   { \n     con    =   ( LinkedList < E >[])( new   LinkedList [ 10 ]); \n   } \n\n   public   boolean   add ( E   obj )   { \n     int   oldSize   =   size ; \n     int   index   =   Math . abs ( obj . hashCode ())   %   con . length ; \n     if   ( con [ index ]   ==   null ) \n       con [ index ]   =   new   LinkedList < E >(); \n     if   (! con [ index ]. contains ( obj ))   { \n       con [ index ]. add ( obj ); \n       size ++; \n     } \n     if   ( 1.0   *   size   /   con . length   >   LOAD_FACTOR_LIMIT ) \n       resize (); \n     return   oldSize   !=   size ; \n   } \n\n   private   void   resize ()   { \n     UnsortedHashSet < E >   temp   =   new   UnsortedHashSet < E >(); \n     temp . con   =   ( LinkedList < E >[])( new   LinkedList [ con . length   *   2   +   1 ]); \n     for   ( int   i   =   0 ;   i   <   con . length ;   i ++)   { \n       if   ( con [ i ]   !=   null ) \n         for   ( E   e   :   con [ i ]) \n           temp . add ( e ); \n     } \n     con   =   temp . con ; \n   } \n\n   public   int   size ()   { \n     return   size ; \n   }  }",
            "title": "Java"
        },
        {
            "location": "/documentation/#javascript",
            "text": "var   Math   =   require ( 'lib/math' );  var   _extends   =   function   ( target )   { \n   for   ( var   i   =   1 ;   i   <   arguments . length ;   i ++ )   { \n     var   source   =   arguments [ i ]; \n     for   ( var   key   in   source )   { \n       target [ key ]   =   source [ key ]; \n     } \n   } \n\n   return   target ;  };  var   e   =   exports . e   =   2.71828182846 ;  exports [ 'default' ]   =   function   ( x )   { \n   return   Math . exp ( x );  };  module . exports   =   _extends ( exports [ 'default' ],   exports );",
            "title": "JavaScript"
        },
        {
            "location": "/documentation/#json",
            "text": "{ \n   \"name\" :   \"mkdocs-material\" , \n   \"version\" :   \"0.2.4\" , \n   \"description\" :   \"A Material Design theme for MkDocs\" , \n   \"homepage\" :   \"http://squidfunk.github.io/mkdocs-material/\" , \n   \"authors\" :   [ \n     \"squidfunk <martin.donath@squidfunk.com>\" \n   ], \n   \"license\" :   \"MIT\" , \n   \"main\" :   \"Gulpfile.js\" , \n   \"scripts\" :   { \n     \"start\" :   \"./node_modules/.bin/gulp watch --mkdocs\" , \n     \"build\" :   \"./node_modules/.bin/gulp build --production\" \n   } \n   ...  }",
            "title": "JSON"
        },
        {
            "location": "/documentation/#julia",
            "text": "using   MXNet  mlp   =   @mx . chain   mx . Variable ( : data )               => \n   mx . FullyConnected ( name =: fc1 ,   num_hidden = 128 )   => \n   mx . Activation ( name =: relu1 ,   act_type =: relu )     => \n   mx . FullyConnected ( name =: fc2 ,   num_hidden = 64 )    => \n   mx . Activation ( name =: relu2 ,   act_type =: relu )     => \n   mx . FullyConnected ( name =: fc3 ,   num_hidden = 10 )    => \n   mx . SoftmaxOutput ( name =: softmax )  # data provider  batch_size   =   100  include ( Pkg . dir ( \"MXNet\" ,   \"examples\" ,   \"mnist\" ,   \"mnist-data.jl\" ))  train_provider ,   eval_provider   =   get_mnist_providers ( batch_size )  # setup model  model   =   mx . FeedForward ( mlp ,   context = mx . cpu ())  # optimization algorithm  optimizer   =   mx . SGD ( lr = 0.1 ,   momentum = 0.9 )  # fit parameters  mx . fit ( model ,   optimizer ,   train_provider ,   n_epoch = 20 ,   eval_data = eval_provider )",
            "title": "Julia"
        },
        {
            "location": "/documentation/#lua",
            "text": "local   ffi   =   require ( \"ffi\" )  ffi . cdef [[    void Sleep(int ms);    int poll(struct pollfd *fds, unsigned long nfds, int timeout);  ]]  local   sleep  if   ffi . os   ==   \"Windows\"   then \n   function   sleep ( s ) \n     ffi . C . Sleep ( s * 1000 ) \n   end  else \n   function   sleep ( s ) \n     ffi . C . poll ( nil ,   0 ,   s   *   1000 ) \n   end  end  for   i   =   1 , 160   do \n   io.write ( \".\" );   io.flush () \n   sleep ( 0.01 )  end  io.write ( \" \\n \" )",
            "title": "Lua"
        },
        {
            "location": "/documentation/#mysql",
            "text": "SELECT \n   Employees . EmployeeID , \n   Employees . Name , \n   Employees . Salary , \n   Manager . Name   AS   Manager  FROM \n   Employees  LEFT   JOIN \n   Employees   AS   Manager  ON \n   Employees . ManagerID   =   Manager . EmployeeID  WHERE \n   Employees . EmployeeID   =   '087652' ;",
            "title": "MySQL"
        },
        {
            "location": "/documentation/#php",
            "text": "<?php  // src/AppBundle/Controller/LuckyController.php  namespace   AppBundle\\Controller ;  use   Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ;  use   Symfony\\Component\\HttpFoundation\\Response ;  class   LuckyController   { \n\n   /**     * @Route(\"/lucky/number\")     */ \n   public   function   numberAction ()   { \n     $number   =   mt_rand ( 0 ,   100 ); \n\n     return   new   Response ( \n       '<html><body>Lucky number: ' . $number . '</body></html>' \n     ); \n   }  }",
            "title": "PHP"
        },
        {
            "location": "/documentation/#protocol-buffers",
            "text": "syntax   =   \"proto2\" ;  package   caffe ;  // Specifies the shape (dimensions) of a Blob.  message   BlobShape   { \n   repeated   int64   dim   =   1   [ packed   =   true ];  }  message   BlobProto   { \n   optional   BlobShape   shape   =   7 ; \n   repeated   float   data   =   5   [ packed   =   true ]; \n   repeated   float   diff   =   6   [ packed   =   true ]; \n\n   // 4D dimensions -- deprecated.  Use \"shape\" instead. \n   optional   int32   num   =   1   [ default   =   0 ]; \n   optional   int32   channels   =   2   [ default   =   0 ]; \n   optional   int32   height   =   3   [ default   =   0 ]; \n   optional   int32   width   =   4   [ default   =   0 ];  }",
            "title": "Protocol Buffers"
        },
        {
            "location": "/documentation/#python",
            "text": "\"\"\"    A very simple MNIST classifier.    See extensive documentation at    http://tensorflow.org/tutorials/mnist/beginners/index.md  \"\"\"  from   __future__   import   absolute_import  from   __future__   import   division  from   __future__   import   print_function  # Import data  from   tensorflow.examples.tutorials.mnist   import   input_data  import   tensorflow   as   tf  flags   =   tf . app . flags  FLAGS   =   flags . FLAGS  flags . DEFINE_string ( 'data_dir' ,   '/tmp/data/' ,   'Directory for storing data' )  mnist   =   input_data . read_data_sets ( FLAGS . data_dir ,   one_hot = True )  sess   =   tf . InteractiveSession ()  # Create the model  x   =   tf . placeholder ( tf . float32 ,   [ None ,   784 ])  W   =   tf . Variable ( tf . zeros ([ 784 ,   10 ]))  b   =   tf . Variable ( tf . zeros ([ 10 ]))  y   =   tf . nn . softmax ( tf . matmul ( x ,   W )   +   b )",
            "title": "Python"
        },
        {
            "location": "/documentation/#ruby",
            "text": "require   'finity/event'  require   'finity/machine'  require   'finity/state'  require   'finity/transition'  require   'finity/version'  module   Finity \n   class   InvalidCallback   <   StandardError ;   end \n   class   MissingCallback   <   StandardError ;   end \n   class   InvalidState      <   StandardError ;   end \n\n   # Class methods to be injected into the including class upon inclusion. \n   module   ClassMethods \n\n     # Instantiate a new state machine for the including class by accepting a \n     # block with state and event (and subsequent transition) definitions. \n     def   finity   options   =   {},   & block \n       @finity   ||=   Machine . new   self ,   options ,   & block \n     end \n\n     # Return the names of all registered states. \n     def   states \n       @finity . states . map   {   | name ,   _ |   name   } \n     end \n\n     # Return the names of all registered events. \n     def   events \n       @finity . events . map   {   | name ,   _ |   name   } \n     end \n   end \n\n   # Inject methods into the including class upon inclusion. \n   def   self . included   base \n     base . extend   ClassMethods \n   end  end",
            "title": "Ruby"
        },
        {
            "location": "/documentation/#xml",
            "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>  <!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]>  <?oxygen RNGSchema=\"some.rng\" type=\"xml\"?>  <xs:main-Tag   xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > \n   <!-- This is a sample comment --> \n   <childTag   attribute= \"Quoted Value\"   another-attribute= 'Single quoted value' \n       a-third-attribute= '123' > \n     <withTextContent> Some text content </withTextContent> \n     <withEntityContent> Some text content with  &lt; entities &gt;  and\n      mentioning uint8_t and int32_t </withEntityContent> \n     <otherTag   attribute= 'Single quoted Value' /> \n   </childTag> \n   <![CDATA[ some CData ]]>  </main-Tag>",
            "title": "XML"
        },
        {
            "location": "/documentation/#footnotes",
            "text": "Footnotes  is another extension included in the standard Markdown library.\nAs the name says, it adds the ability to add footnotes to your documentation.",
            "title": "Footnotes"
        },
        {
            "location": "/documentation/#installation_1",
            "text": "Add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   footnotes",
            "title": "Installation"
        },
        {
            "location": "/documentation/#usage_1",
            "text": "The markup for footnotes is similar to the standard Markdown markup for links.\nA reference is inserted in the text, which can then be defined at any point in\nthe document.",
            "title": "Usage"
        },
        {
            "location": "/documentation/#inserting-the-reference",
            "text": "The footnote reference is enclosed in square brackets and starts with a caret,\nfollowed by an arbitrary label which may contain numeric identifiers [1, 2, 3,\n...] or names [Granovetter et al. 1998]. The rendered references are always\nconsecutive superscripted numbers.  Example:  Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]  Result:  Lorem ipsum 1  dolor sit amet, consectetur adipiscing elit. 2",
            "title": "Inserting the reference"
        },
        {
            "location": "/documentation/#inserting-the-content",
            "text": "The footnote content is also declared with a label, which must match the label\nused for the footnote reference. It can be inserted at an arbitrary position in\nthe document and is always rendered at the bottom of the page. Furthermore, a\nbacklink is automatically added to the footnote reference.",
            "title": "Inserting the content"
        },
        {
            "location": "/documentation/#on-a-single-line",
            "text": "Short statements can be written on the same line.  Example:  [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.  Result:  Jump to footnote at the bottom of the page",
            "title": "on a single line"
        },
        {
            "location": "/documentation/#on-multiple-lines",
            "text": "Paragraphs should be written on the next line. As with all Markdown blocks, the\ncontent must be indented by four spaces.  Example:  [^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.  Result:  Jump to footnote at the bottom of the page  path: tree/master/docs/extensions\nsource: metadata.md",
            "title": "on multiple lines"
        },
        {
            "location": "/documentation/#metadata",
            "text": "The  Metadata  extension makes it possible to add metadata to a document\nwhich gives more control over the theme in a page-specific context.",
            "title": "Metadata"
        },
        {
            "location": "/documentation/#installation_2",
            "text": "Add the following lines to your  mkdocs.yml :  markdown_extensions : \n   -   meta",
            "title": "Installation"
        },
        {
            "location": "/documentation/#usage_2",
            "text": "Metadata is written as a series of key-value pairs at the beginning of the\nMarkdown document, delimited by a blank line which ends the metadata context.\nNaturally, the metadata is stripped from the document before rendering the\nactual page content and made available to the theme.  Example:  title: Lorem ipsum dolor sit amet\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor.\npath: path/to/file\nsource: file.js\n\n# Headline\n\n...  See the next section which covers the metadata that is supported by Material.",
            "title": "Usage"
        },
        {
            "location": "/documentation/#overriding-the-title",
            "text": "The page title can be overridden on a per-document level:  title: Lorem ipsum dolor sit amet  This will set the  title  tag inside the document  head  for the current page\nto the provided value. It will also override the default behavior of Material\nfor MkDocs which appends the site title using a dash as a separator to the page\ntitle.",
            "title": "Overriding the title"
        },
        {
            "location": "/documentation/#overriding-the-description",
            "text": "The page description can also be overridden on a per-document level:  description :   Nullam urna elit, malesuada eget finibus ut, ac tortor.   This will set the  meta  tag containing the site description inside the\ndocument  head  for the current page to the provided value.",
            "title": "Overriding the description"
        },
        {
            "location": "/documentation/#linking-sources",
            "text": "When a document is related to a specific set of source files and the  repo_url \nis defined inside the project's  mkdocs.yml , the files can be linked using the source  key:  source: file.js  A new entry at the bottom of the table of contents is generated that is linking\nto the section listing the linked source files. Multiple files can be linked by\nadding filenames on separate lines:  source: file.js\n        file.css  The filenames are appended to the  repo_url  set in your  mkdocs.yml , but can\nbe prefixed with a  path  to ensure correct path resolving:  Example:  path: tree/master/docs/extensions\nsource: metadata.md  Result:  See the  source  section for the resulting output.",
            "title": "Linking sources"
        },
        {
            "location": "/documentation/#permalinks",
            "text": "Permalinks are a feature of the  Table of Contents  extension, which is part\nof the standard Markdown library. The extension inserts an anchor at the end of\neach headline, which makes it possible to directly link to a subpart of the\ndocument.",
            "title": "Permalinks"
        },
        {
            "location": "/documentation/#installation_3",
            "text": "To enable permalinks, add the following to your  mkdocs.yml :  markdown_extensions : \n   -   toc(permalink=true)   This will add a link containing the paragraph symbol  \u00b6  at the end of each\nheadline (exactly like on the page you're currently viewing), which the\nMaterial theme will make appear on hover. In order to change the text of the\npermalink, a string can be passed, e.g.:  markdown_extensions:\n  - toc(permalink=Link)",
            "title": "Installation"
        },
        {
            "location": "/documentation/#usage_3",
            "text": "When enabled, permalinks are inserted automatically.",
            "title": "Usage"
        },
        {
            "location": "/documentation/#pymdown-extensions",
            "text": "PyMdown Extensions  is a collection of Markdown extensions that add some\ngreat features to the standard Markdown library. For this reason, the installation of this package is highly recommended  as it's well-integrated\nwith the Material theme.",
            "title": "PyMdown Extensions"
        },
        {
            "location": "/documentation/#installation_4",
            "text": "The PyMdown Extensions package can be installed with the following command:  pip install pymdown-extensions  The following list of extensions that are part of the PyMdown Extensions\npackage are recommended to be used together with the Material theme:  markdown_extensions : \n   -   pymdownx.arithmatex \n   -   pymdownx.betterem(smart_enable=all) \n   -   pymdownx.caret \n   -   pymdownx.critic \n   -   pymdownx.emoji : \n       emoji_generator :   !!python/name:pymdownx.emoji.to_svg \n   -   pymdownx.inlinehilite \n   -   pymdownx.magiclink \n   -   pymdownx.mark \n   -   pymdownx.smartsymbols \n   -   pymdownx.superfences \n   -   pymdownx.tasklist(custom_checkbox=true) \n   -   pymdownx.tilde",
            "title": "Installation"
        },
        {
            "location": "/documentation/#usage_4",
            "text": "",
            "title": "Usage"
        },
        {
            "location": "/documentation/#github-flavored-markdown",
            "text": "Most of the extensions included in the PyMdown Extensions package try to bring\nthe Markdown experience closer to GitHub Flavored Markdown (GFM).  The PyMdown Extensions package adds a shorthand to enable all of the included\nextensions that provide the GFM experience. However, usage of the shorthand is\ndiscouraged, because some extensions are not supported, as the Material theme\nuses some incompatible extensions included in the standard Markdown library.",
            "title": "GitHub Flavored Markdown"
        },
        {
            "location": "/documentation/#betterem",
            "text": "BetterEm  improves the handling of emphasis markup ( bold  and  italic )\nwithin Markdown by providing a more sophisticated parser for better detecting\nstart and end tokens. Read the documentation for  usage notes .",
            "title": "BetterEm"
        },
        {
            "location": "/documentation/#emoji",
            "text": "Emoji  adds the ability to insert a  -load of emojis that we use in\nour daily lives. See the  EmojiOne demo  for a list of all available\nemojis. Happy scrolling    Legal disclaimer  Material has no affiliation with  EmojiOne  which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license  to ensure proper usage and attribution.",
            "title": "Emoji"
        },
        {
            "location": "/documentation/#magiclink",
            "text": "MagicLink  detects links in Markdown and auto-generates the necessary\nmarkup, so no special syntax is required. It auto-links  http[s]://  and ftp://  links, as well as references to email addresses:",
            "title": "MagicLink"
        },
        {
            "location": "/documentation/#superfences",
            "text": "SuperFences  provides the ability to nest code blocks under blockquotes,\nlists and other block elements, which the  Fenced Code Blocks  extension\nfrom the standard Markdown library doesn't parse correctly.",
            "title": "SuperFences"
        },
        {
            "location": "/documentation/#tasklist",
            "text": "Tasklist  adds support for styled checkbox lists. This is useful for\nkeeping track of tasks and showing what has been done and has yet to be done.\nCheckbox lists are like regular lists, but prefixed with  [ ]  for empty or [x]  for filled checkboxes.  Example:  * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n* [x] Nulla lobortis egestas semper\n* [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est\n* [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis\n    * [ ] Praesent sed risus massa\n* [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n* [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi  Result:    Lorem ipsum dolor sit amet, consectetur adipiscing elit   Nulla lobortis egestas semper   Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est   Vestibulum convallis sit amet nisi a tincidunt   In hac habitasse platea dictumst   In scelerisque nibh non dolor mollis congue sed et metus   Sed egestas felis quis elit dapibus, ac aliquet turpis mattis   Praesent sed risus massa     Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque   Nulla vel eros venenatis, imperdiet enim id, faucibus nisi",
            "title": "Tasklist"
        },
        {
            "location": "/documentation/#tilde",
            "text": "Tilde  provides an easy way to  strike through  cross out\u00a0text.\nThe portion of text that should be erased must be enclosed in two tildes ~~...~~  and the extension will take care of the rest.",
            "title": "Tilde"
        },
        {
            "location": "/documentation/#more-syntactic-sugar",
            "text": "",
            "title": "More syntactic sugar"
        },
        {
            "location": "/documentation/#caret",
            "text": "Caret  is the sister extension of  Tilde  and makes it possible to\nhighlight  inserted text . The portion of text that should be marked as added\nmust be enclosed in two carets  ^^...^^ .",
            "title": "Caret"
        },
        {
            "location": "/documentation/#mark",
            "text": "Mark  adds the ability to  highlight text  like it was marked with a yellow text marker . The portion of text that should be highlighted must be\nenclosed in two equal signs  ==...== .",
            "title": "Mark"
        },
        {
            "location": "/documentation/#smartsymbols",
            "text": "SmartSymbols  converts markup for special characters into their\ncorresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright\nsymbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).",
            "title": "SmartSymbols"
        },
        {
            "location": "/documentation/#critic",
            "text": "Critic  implements  Critic Markup , a Markdown extension that enables\nthe tracking of changes (additions, deletions and comments) on documents.\nDuring compilation of the Markdown document, changes can be rendered (default),\naccepted or rejected.  Text can be  deleted  and replacement text  added . This can also be\ncombined into  one a single  operation.  Highlighting  is also\npossible  and comments can be added inline .   Formatting can also be applied to blocks, by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.",
            "title": "Critic"
        },
        {
            "location": "/documentation/#arithmatex-mathjax",
            "text": "Arithmatex  integrates Material with  MathJax  which parses\nblock-style and inline equations written in TeX markup and outputs them in\nmathematical notation. See  this thread  for a short introduction and quick\nreference on how to write equations in TeX syntax.  Besides activating the extension in the  mkdocs.yml , the MathJax JavaScript\nruntime needs to be included. This must be done with additional JavaScript :  extra_javascript : \n   -   'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'   If you want to override the default MathJax configuration, you can do this by\nadding another JavaScript file  before  the MathJax runtime in extra_javascript  which contains your MathJax configuration, e.g.:  window . MathJax   =   { \n   tex2jax :   { \n     inlineMath :   [   [ \"\\\\(\" , \"\\\\)\" ]   ], \n     displayMath :   [   [ \"\\\\[\" , \"\\\\]\" ]   ] \n   }, \n   TeX :   { \n     TagSide :   \"right\" , \n     TagIndent :   \".8em\" , \n     MultLineWidth :   \"85%\" , \n     equationNumbers :   { \n       autoNumber :   \"AMS\" , \n     }, \n     unicode :   { \n       fonts :   \"STIXGeneral,'Arial Unicode MS'\" \n     } \n   }, \n   displayAlign :   \"left\" , \n   showProcessingMessages :   false , \n   messageStyle :   \"none\"  };   In your  mkdocs.yml , include it with:  extra_javascript : \n   -   'javascripts/extra.js' \n   -   'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'",
            "title": "Arithmatex MathJax"
        },
        {
            "location": "/documentation/#blocks",
            "text": "Blocks are enclosed in  $$ ... $$  which are placed on separate lines.  Example:  $$  \\frac {n ! }{k !( n - k )! }  =   \\binom {n}{k}  $$   Result:  \\[\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n\\]",
            "title": "Blocks"
        },
        {
            "location": "/documentation/#inline_1",
            "text": "Inline equations need to be enclosed in  $ ... $ :  Example:  Lorem ipsum dolor sit amet:  $ p ( x|y )   =   \\frac {p ( y|x ) p ( x ) }{p ( y ) } $   Result:  Lorem ipsum dolor sit amet:  \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)",
            "title": "Inline"
        },
        {
            "location": "/documentation/#inlinehilite",
            "text": "InlineHilite  adds support for inline code highlighting. It's useful for\nshort snippets included within body copy, e.g.  var   test   =   0 ;  and can be\nachived by prefixing inline code with a shebang and language identifier,\ne.g.  #!js .      Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0 \u21a9    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n  nulla. Curabitur feugiat, tortor non consequat finibus, justo purus\n  auctor massa, nec semper lorem quam in massa.\u00a0 \u21a9",
            "title": "InlineHilite"
        }
    ]
}